{"version":3,"sources":["components/UI/Input/Input.module.css","components/NewVehicle/NewVehicle.module.css","components/Reservations/ReservationsFilter/ReservationsFilter.module.css","components/Reservations/ReservationDate/ReservationDate.module.css","components/Reservations/ReservationsList/ReservationsList.module.css","components/Profile/Header/Header.module.css","components/Map/MapContainer/MapContainer.module.css","components/Map/UserLocation/UserLocation.module.css","components/Map/InfoContainer/InfoContainer.module.css","components/UI/Card/Card.module.css","components/UI/Button/Button.module.css","components/UI/Header/Header.module.css","components/UI/Loading/Loading.module.css","components/Reservations/NewReservation/NewReservation.module.css","components/Map/Search/SearchAction/SearchAction.module.css","components/UI/FloatingButton/FloatingButton.module.css","components/UI/InfoMessage/InfoMessage.module.css","components/Reservations/ReservationsReports/ReservationsReports.module.css","components/Profile/Administrator/Administrator.module.css","pages/ParkingAreas/ParkingAreas.module.css","components/Map/Layers/layersStyle.js","components/Map/MapContainer/MapContainer.js","components/Map/UserLocation/UserLocation.js","components/Map/Layers/layers.js","components/UI/Card/Card.js","components/UI/Button/Button.js","components/UI/Header/Header.js","components/UI/Loading/Loading.js","store/actions/actionTypes.js","store/axios.js","store/actions/authActions.js","store/actions/userDataActions.js","store/actions/driverVehiclesActions.js","store/actions/reservationActions.js","store/actions/parkingAreaActions.js","store/actions/commonActions.js","components/Map/InfoContainer/InfoContainer.js","components/UI/Input/Input.js","components/UI/Modal/Modal.js","components/Reservations/ReservationPayment/ReservationPayment.js","utility/dateFormat.js","utility/validateHandler.js","utility/dataUtility.js","components/Reservations/ReservationForm/ReservationForm.js","components/Reservations/NewReservation/NewReservation.js","components/UI/FloatingButton/FloatingButton.js","components/Map/Search/SearchAction/SearchAction.js","components/Map/Search/SearchContainer/SearchContainer.js","components/Map/Search/Search.js","components/Reservations/ReservationsReports/ReservationsReports.js","pages/Home/Home.js","components/Navigation/Navigation.js","components/NewVehicle/NewVehicle.js","components/UI/InfoMessage/InfoMessage.js","pages/Vehicles/Vehicles.js","components/Reservations/ReservationsFilter/ReservationsFilter.js","components/Reservations/ReservationDate/ReservationDate.js","components/Reservations/Reservation/Reservation.js","components/Reservations/ReservationsList/ReservationsList.js","utility/reports.js","components/Reservations/ReservationsFilter/ReportsFilter/ReportsFilter.js","components/Reservations/ReservationsFilter/VehicleFilter/VehicleFilter.js","pages/Reservations/Reservations.js","components/Auth/Register/Register.js","components/Auth/Login/Login.js","components/Profile/Driver/DrivingLicense/DrivingLicense.js","components/Profile/Driver/DriverProfile.js","components/Profile/Driver/EditProfile/EditProfile.js","pages/Profile/Driver/Driver.js","components/Profile/Header/Header.js","components/Profile/Admin/AdminProfile.js","pages/Profile/Admin/Admin.js","components/Profile/Administrator/Administrator.js","pages/Profile/Administrator/Administrator.js","components/PageNotFound/PageNotFound.js","components/ParkingAreas/ParkingAreas.js","pages/ParkingAreas/ParkingAreas.js","App.js","store/utility.js","store/reducers/authReducer.js","store/reducers/userDataReducer.js","store/reducers/driverVehiclesReducer.js","store/reducers/reservationReducer.js","store/reducers/parkingAreaReducer.js","serviceWorkerRegistration.js","index.js","components/Navigation/Navigation.module.css","pages/Reservations/Reservations.module.css","components/Reservations/ReservationForm/ReservationForm.module.css","components/UI/Modal/Modal.module.css","pages/Vehicles/Vehicles.module.css","components/Auth/Register/Register.module.css","components/Profile/Driver/DriverProfile.module.css","pages/Profile/WrapperCard.module.css","components/Reservations/ReservationPayment/ReservationPayment.module.css","components/Reservations/Reservation/Reservation.module.css","components/Auth/Login/Login.module.css","components/Profile/Driver/DrivingLicense/DrivingLicense.module.css","components/Profile/Admin/AdminProfile.module.css","components/Map/Search/SearchContainer/SearchContainer.module.css","components/Reservations/ReservationsFilter/ReportsFilter/ReportsFilter.module.css","components/Profile/Driver/EditProfile/EditProfile.module.css","components/ParkingAreas/ParkingAreas.module.css"],"names":["module","exports","clusterLayer","id","type","source","filter","paint","clusterCountLayer","layout","unclusteredPointLayer","mapboxgl","workerClass","require","default","MapContainer","props","mapRef","useRef","className","classes","viewport","width","height","mapStyle","onViewportChange","mapboxApiAccessToken","process","data","interactiveLayerIds","onClick","event","feature","features","clusterId","properties","cluster_id","current","getMap","getSource","getClusterExpansionZoom","err","zoom","onClusterExpansion","geometry","coordinates","onAreaClick","ref","children","geolocateControlStyle","bottom","right","UserLocation","style","positionOptions","enableHighAccuracy","trackUserLocation","showAccuracyCircle","Layers","cluster","clusterMaxZoom","clusterRadius","Card","card","Button","title","button","disabled","Header","onCloseClick","LoadingSpinner","Loader","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","REGISTER_SUCCESS","USER_ROLE_SUCCESS","FETCH_USER_DATA_START","FETCH_USER_DATA_SUCCESS","FETCH_USER_DATA_FAIL","ADD_DRIVER_LICENSE_SUCCESS","REMOVE_USER_DATA_SUCCESS","UPDATE_DRIVER_SUCCESS","UPDATE_USER_PASSWORD_SUCCESS","FETCH_DRIVER_VEHICLES_START","FETCH_DRIVER_VEHICLES_SUCCESS","FETCH_DRIVER_VEHICLES_FAIL","DELETE_DRIVER_VEHICLE_SUCCESS","ADD_DRIVER_VEHICLE_SUCCESS","FETCH_VEHICLE_SUCCESS","FETCH_RESERVATIONS_START","FETCH_RESERVATIONS_SUCCESS","FETCH_RESERVATIONS_FAIL","ADD_DRIVER_RESERVATION_SUCCESS","DELETE_RESERVATION_SUCCESS","CANCEL_RESERVATION_SUCCESS","UPDATE_RESERVATION_PAYMENT_SUCCESS","FETCH_AREA_START","FETCH_AREAS_SUCCESS","FETCH_AREA_SUCCESS","FETCH_AREA_FAIL","CLOSE_AREA_SELECTION","UPDATE_ERROR_SUCCESS","instance","axios","create","baseURL","authSucces","userId","actionTypes","registerSucces","email","authFail","error","authLogout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","userAuth","password","post","then","response","expirationDate","Date","getTime","setItem","catch","getUserRole","get","role","fetchUserDataStart","fetchUserDataSuccess","user","fetchUserDataFail","removeUserData","fetchDriverData","fetchAdminData","fetchAdministratorData","addDriverLicense","driverId","licenseData","put","license","console","log","updateDriver","driverUpdateData","driver","updateUserPassword","fetchDriverVehiclesStart","fetchDriverVehiclesFail","fetchDriverVehicles","vehicles","fetchVehicle","vehicleId","vehicle","deleteDriverVehicle","delete","deleteDriverVehicleSuccess","addDriverVehicle","addDriverVehicleSuccess","fetchReservationsStart","fetchReservationsSuccess","reservations","driverReservations","fetchReservationsFail","addDriverReservationSuccess","reservation","fetchDriverReservations","fetchAreaReservations","areaId","cancelReservation","reservationId","updateReservationPayment","deleteReservation","deleteReservationsSuccess","fetchAreaStart","fetchAreaSuccess","area","fetchAreaFail","fetchParkingAreas","areas","parkingAreas","updateError","connect","state","driverAuth","actionCreators","useEffect","areaInfo","emplacement","availableSpots","pricePerHour","emplacementLocation","onReserve","loading","Loading","Input","control","isValid","invalid","htmlFor","label","required","placeholder","name","value","onChange","onBlur","min","max","autoComplete","autocomplete","Modal","backdrop","modal","header","content","message","actions","cancel","onCancel","onConfirm","CARD_OPTIONS","base","color","fontFamily","fontSmoothing","fontSize","iconColor","hidePostalCode","ReservationPayment","stripe","useStripe","elements","useElements","useState","isPaymentProcessing","setIsPaymentProcessing","checkoutError","setCheckoutError","handleReservationPay","a","preventDefault","cardElement","getElement","CardElement","amount","price","clientSecret","createPaymentMethod","paymentMethodRequest","confirmCardPayment","payment_method","paymentMethod","onPay","Fragment","payment","duration","options","ev","dateFormat","date","format","timeFormat","toTimeString","substr","checkValidity","rules","isRequired","trim","minLength","length","maxLength","isEmail","test","isPhoneNumber","isLicenseNumber","isLicensePlate","isExpirationDate","todayDate","localeCompare","getAreaZone","getNumberOfReservatiosn","number","forEach","stripePromise","loadStripe","today","tomorrowDate","setDate","getDate","toLocaleDateString","tomorrow","formatData","startTime","setMinutes","getMinutes","toString","endTime","selectedArea","parkingArea","showLicensePlateInput","setShowLicensePlateInput","goToPayment","setGoToPayment","setDuration","setPrice","enteredDate","enteredStartTime","enteredEndTime","enteredLicensePlate","userInput","setUserInput","isUserInputValid","setIsUserInputValid","formIsValid","setFormIsValid","identifier","clearTimeout","validateUserInput","prevState","target","validate","start","split","end","startDate","diff","hours","Math","floor","minutes","handleInputChange","reservationForm","Row","Col","aria-invalid","map","index","licensePlate","reservationData","reservationDate","onDriverAdd","onAnonimAdd","to","onSuccess","driverVehicles","onDriverReservationAdd","onAnonimReservationAdd","onErrorClose","FloatingButton","SearchAction","onSearchClick","SearchContainer","userInputSearch","setUserInputSearch","filteredAreas","toLowerCase","includes","Form","Control","onSelectLocation","Search","show","onClickResult","onFetchParkingArea","onFetchVehicles","onFetchVechicle","onCloseAreaSelection","latitude","longitude","setViewport","showPopup","setShowPopup","showReserveForm","setShowReserveForm","showSearchContainer","setShowSearchContainer","reservationSuccess","setReservationSuccess","handleAreaClick","coords","transitionDuration","getItem","handleCloseClick","showSidebar","setShowSidebar","anonimIdentifier","handleNavClick","size","NewVehicle","isLicensePlateValid","setIsLicensePlateValid","onAdd","InfoMessage","onDriverVehiclesFetch","onDriverVehicleDelete","onDriverVehicleAdd","showAddVehicle","setShowAddVehicle","setEnteredLicensePlate","showAnonimMessage","setShowAnonimMessage","vehicleList","CardDeck","Body","Title","Text","noVehicleFoundInfo","anonimMessage","onFetchAllAreas","selectedStatus","onChangeFilter","ReservationDate","day","month","year","onCancelReservation","onDeleteReservation","showActions","Accordion","Toggle","as","eventKey","Collapse","sm","status","md","lg","xs","ReservationsList","getStatus","getReservationsPerMonth","r","getMonth","ReportsFilter","save","aria-label","onDownload","onPrint","months","i","labels","reports","datasets","backgroundColor","borderColor","borderWidth","scales","yAxes","ticks","beginAtZero","ReservationsReports","docRef","chartRef","setChartRef","filteredStatus","setFilteredStatus","filteredReservations","getFullYear","update","saveDocument","print","document","html2canvas","canvas","imgData","toDataURL","pdf","jsPDF","ratio","internal","pageSize","getWidth","setTextColor","text","addImage","autoPrint","window","open","output","VehicleFilter","driverData","onfetchDriverReservations","onFetchAnonimReservations","onFetchAreaReservations","onFetchAdminData","onFetchAllReservations","showReports","setShowReports","filteredInput","setFilteredInput","getReservationState","toUpperCase","reservationsData","noReservationFoundInfo","onDriverRegister","registerData","onAdminRegister","history","useHistory","enteredName","enteredEmail","enteredPhone","enteredPassword","enteredVerifyPassword","validateRules","inputIsValid","setInputIsValid","passwordIsVerified","setPasswordIsVerified","showPassword","setShowPassword","showVerifyPassword","setShowVerifyPassword","handleValidateUserInput","phone","adminData","parkingAreaId","push","register","src","alt","onAuth","setEnteredEmail","emailIsValid","setEmailIsValid","setEnteredPassword","passwordIsValid","setPasswordIsValid","handleLoginSubmit","authForm","onSubmit","login","onLicenseAdd","isLicenseNumberValid","setIsLicenseNumberValid","isLicenseDateValid","setIsLicenseDateValid","showEdit","licenseField","enteredLicenseNumber","onLicenseChange","enteredExpirationDate","showAddActions","Footer","onAddClose","onAddSuccess","onDriverLogout","onRemoveUserData","onFetchReservations","showNewDrivingLicense","setShowNewDrivingLicense","reservationNumber","username","onEdit","hasDrivingLicense","onReset","onDriverUpdate","onFetchDriverData","newPassword","enableModifyPassword","setEnableModifyPassword","onClose","placeholde","showEditFields","setShowEditFields","userLicenseInput","setUserLicenseInput","profile","editProfile","onLogout","onUpdatePassword","changePassword","setChangePassword","handleChangePasswordClose","handleLogout","profilePicture","loadingReservations","activeReservations","dataUtility","progresReservations","canceledReservations","finishedReservations","dashboard","totalSpots","Admin","onFetchAdministratorData","Administrator","PageNotFound","React","Component","onSelectArea","city","searchArea","parkingAreasData","utility","admin","handleAddAdminClick","ParkingAreas","withRouter","onTryDriverAutoSignin","exact","path","component","updateObject","oldObject","updatedValues","initialState","authStart","action","authSuccess","registerSuccess","userRoleSuccess","driverAuthReducer","addDriverLicenseSuccess","driverUpdateSuccess","removeUserDataSucces","updateUserPasswordSuccess","userDataReducer","fetchDriverVehiclesSuccess","updatedList","item","fetchVehicleSuccess","driverVehiclesReducer","cancelReservationSuccess","Object","assign","deleteReservationSuccess","addDriverReservationSuccese","reservationsReducer","fetchAllAreasSuccess","closeAreaSelectionSuccess","parkingAreaReducer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","rootReducer","combineReducers","reservationReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","URL","href","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.76c9bf09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"Input_control__3M8AP\",\"invalid\":\"Input_invalid__2q8g4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-vehicle\":\"NewVehicle_new-vehicle__1UzIC\",\"new-vehicle__actions\":\"NewVehicle_new-vehicle__actions__3qAfY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reservations-filter\":\"ReservationsFilter_reservations-filter__3mr42\",\"reservations-filter__control\":\"ReservationsFilter_reservations-filter__control__24JoU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reservation-date\":\"ReservationDate_reservation-date__14fnj\",\"reservation-date__day\":\"ReservationDate_reservation-date__day__2JIbC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reservations-list\":\"ReservationsList_reservations-list__26UiC\",\"reservations-list__fallback\":\"ReservationsList_reservations-list__fallback__1chgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-header\":\"Header_profile-header__1uOQN\",\"user-password\":\"Header_user-password__2N5Vh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map_container\":\"MapContainer_map_container__2trkm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-location\":\"UserLocation_user-location__3G8gN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"area_info\":\"InfoContainer_area_info__3Pvd0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2Wdxf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2yN1B\",\"alternative\":\"Button_alternative__2UjJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info-header\":\"Header_info-header__15gcr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loading_Loader__3NuY4\",\"load2\":\"Loading_load2__LWuTz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new-reservation\":\"NewReservation_new-reservation__IfB0v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-actions\":\"SearchAction_search-actions__NnVIL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"floating-button\":\"FloatingButton_floating-button__3Yo-M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info-message\":\"InfoMessage_info-message__2LA7y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reports\":\"ReservationsReports_reports__oPpUs\",\"print\":\"ReservationsReports_print__r78Jg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"administrator-areas__no\":\"Administrator_administrator-areas__no__yktvv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"areas-card\":\"ParkingAreas_areas-card__D76xt\"};","export const clusterLayer = {\n    id: 'clusters',\n    type: 'circle',\n    source: 'parkingAreas',\n    filter: ['has', 'point_count'],\n    paint: {\n        'circle-color': [\n            'step',\n            ['get', 'point_count'],\n            'rgba(77, 168, 218, 0.5)',\n            50,\n            'rgba(77, 168, 218, 0.75)',\n            150,\n            'rgb(77, 168, 218)',\n        ],\n        'circle-radius': [\n            'step',\n            ['get', 'point_count'],\n            30,\n            50,\n            50,\n            150,\n            70,\n        ]\n    },\n};\n\nexport const clusterCountLayer = {\n    id: 'cluster-count',\n    type: 'symbol',\n    source: 'parkingAreas',\n    filter: ['has', 'point_count'],\n    layout: {\n        'text-field': '{point_count_abbreviated}',\n        'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n        'text-size': 12,\n    },\n};\n\nexport const unclusteredPointLayer = {\n    id: 'unclustered-point',\n    type: 'circle',\n    source: 'parkingAreas',\n    filter: ['!', ['has', 'point_count']],\n    paint: {\n        'circle-color': 'white',\n        'circle-radius': 9,\n    },\n};\n","import React, { useRef } from 'react';\nimport MapGL from 'react-map-gl';\nimport classes from './MapContainer.module.css';\nimport { clusterLayer, unclusteredPointLayer } from '../Layers/layersStyle';\nimport mapboxgl from \"mapbox-gl\";\n// eslint-disable-next-line import/no-webpack-loader-syntax\nmapboxgl.workerClass = require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default;\n\nconst MapContainer = (props) => {\n\n    const mapRef = useRef(null);\n\n    const handleClusterClick = event => {\n        const feature = event.features[0];\n        if (!feature) {\n            return;\n        }\n\n        const clusterId = feature.properties.cluster_id;\n\n        if (!clusterId) {\n            props.onAreaClick(feature.properties, feature.geometry.coordinates);\n            return;\n        }\n\n        const mapboxSource = mapRef.current.getMap().getSource('parkingAreas');\n\n        mapboxSource.getClusterExpansionZoom(clusterId, (err, zoom) => {\n            if (err) {\n                return;\n            }\n\n            props.onClusterExpansion(zoom, feature.geometry.coordinates);\n        });\n\n    };\n\n    return (\n        <div className={classes[\"map_container\"]}>\n            <MapGL\n                {...props.viewport}\n                width=\"100%\"\n                height=\"100%\"\n                mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n                onViewportChange={props.onViewportChange}\n                mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n                data={process.env.REACT_APP_MAPBOX_DATA}\n                interactiveLayerIds={[clusterLayer.id, unclusteredPointLayer.id, unclusteredPointLayer.id]}\n                onClick={handleClusterClick}\n                ref={mapRef}\n            >\n                {props.children}\n            </MapGL>\n        </div>\n    );\n};\n\nexport default MapContainer;\n","import React from 'react';\n\nimport {GeolocateControl} from 'react-map-gl';\n\nimport classes from './UserLocation.module.css';\n\nconst geolocateControlStyle = {\n    bottom: '7rem',\n    right: '1rem',\n};\n\nconst UserLocation = () => {\n    return (\n        <GeolocateControl\n            className={classes[\"user-location\"]}\n            style={geolocateControlStyle}\n            positionOptions={{enableHighAccuracy: true}}\n            trackUserLocation={true}\n            showAccuracyCircle={false}\n\n        />\n    );\n};\n\nexport default UserLocation;\n","import React from 'react';\n\nimport { Source, Layer } from 'react-map-gl';\nimport { clusterLayer, clusterCountLayer, unclusteredPointLayer } from './layersStyle';\n\nconst Layers = () => {\n    return (\n        <Source\n            id=\"parkingAreas\"\n            type=\"geojson\"\n            data={process.env.REACT_APP_MAPBOX_DATA}\n            cluster={true}\n            clusterMaxZoom={14}\n            clusterRadius={50}\n        >\n            <Layer {...clusterLayer} />\n            <Layer {...clusterCountLayer} />\n            <Layer {...unclusteredPointLayer} />\n        </Source>\n    );\n};\n\nexport default Layers;\n","import React from 'react';\n\nimport classes from './Card.module.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      title={props.title}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled ? props.disabled : false}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport classes from \"./Header.module.css\";\nimport {X} from \"react-feather\";\n\nconst Header = props => {\n    return (\n        <div className={classes[\"info-header\"]}>\n            <h3>{props.title}</h3>\n            <button title=\"Inchide\" onClick={props.onCloseClick}>\n                <X/>\n            </button>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport classes from './Loading.module.css';\n\nconst LoadingSpinner = () => {\n    return (\n        <div className={classes.Loader}>Loading...</div>\n    );\n};\n\nexport default LoadingSpinner;\n","export const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_DRIVER_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_DRIVER_SUCCESS';\r\nexport const USER_ROLE_SUCCESS = 'USER_ROLE_SUCCESS';\r\n\r\nexport const FETCH_USER_DATA_START = 'FETCH_USER_DATA_START';\r\nexport const FETCH_USER_DATA_SUCCESS = 'FETCH_USER_DATA_SUCCESS';\r\nexport const FETCH_USER_DATA_FAIL = 'FETCH_USER_DATA_FAIL';\r\nexport const ADD_DRIVER_LICENSE_SUCCESS = 'FETCH_DRIVER_LICENSE_SUCCESS';\r\nexport const REMOVE_USER_DATA_SUCCESS = 'REMOVE_USER_DATA_SUCCESS';\r\nexport const UPDATE_DRIVER_SUCCESS = 'UPDATE_DRIVER_SUCCESS';\r\nexport const UPDATE_USER_PASSWORD_SUCCESS = 'UPDATE_USER_PASSWORD_SUCCESS';\r\n\r\nexport const FETCH_DRIVER_VEHICLES_START = 'FETCH_DRIVER_VEHICLES_START';\r\nexport const FETCH_DRIVER_VEHICLES_SUCCESS = 'FETCH_DRIVER_VEHICLES_SUCCESS';\r\nexport const FETCH_DRIVER_VEHICLES_FAIL = 'FETCH_DRIVER_VEHICLES_FAIL';\r\nexport const DELETE_DRIVER_VEHICLE_SUCCESS = 'DELETE_DRIVER_VEHICLE_SUCCESS';\r\nexport const ADD_DRIVER_VEHICLE_SUCCESS = 'ADD_DRIVER_VEHICLE_SUCCESS';\r\nexport const FETCH_VEHICLE_SUCCESS = 'FETCH_VEHICLE_SUCCESS';\r\n\r\nexport const FETCH_RESERVATIONS_START = 'FETCH_RESERVATIONS_START';\r\nexport const FETCH_RESERVATIONS_SUCCESS = 'FETCH_RESERVATIONS_SUCCESS';\r\nexport const FETCH_RESERVATIONS_FAIL = 'FETCH_RESERVATIONS_FAIL';\r\nexport const ADD_DRIVER_RESERVATION_SUCCESS = 'ADD_DRIVER_RESERVATION_SUCCESS';\r\nexport const DELETE_RESERVATION_SUCCESS = 'DELETE_RESERVATION_SUCCESS';\r\nexport const CANCEL_RESERVATION_SUCCESS = 'CANCEL_RESERVATION_SUCCESS';\r\nexport const UPDATE_RESERVATION_PAYMENT_SUCCESS = 'UPDATE_RESERVATION_PAYMENT_SUCCESS';\r\n\r\nexport const FETCH_AREA_START = 'FETCH_AREA_START';\r\nexport const FETCH_AREAS_SUCCESS = 'FETCH_AREAS_SUCCESS';\r\nexport const FETCH_AREA_SUCCESS = 'FETCH_AREA_SUCCESS';\r\nexport const FETCH_AREA_FAIL = 'FETCH_AREA_FAIL';\r\nexport const CLOSE_AREA_SELECTION = 'CLOSE_AREA_SELECTION';\r\n\r\nexport const UPDATE_ERROR_SUCCESS = 'UPDATE_ERROR_SUCCESS';\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:5000/api'\r\n});\r\n\r\n\r\nexport default instance;\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START,\r\n    };\r\n};\r\n\r\nexport const authSucces = (userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        userId: userId,\r\n    };\r\n};\r\n\r\nexport const registerSucces = (email) => {\r\n    return {\r\n        type: actionTypes.REGISTER_SUCCESS,\r\n        email: email,\r\n    };\r\n};\r\n\r\nexport const userRoleSucces = (role) => {\r\n    return {\r\n        type: actionTypes.USER_ROLE_SUCCESS,\r\n        role: role,\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error,\r\n    };\r\n};\r\n\r\nexport const authLogout = () => {\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(authLogout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const driverId = localStorage.getItem('userId');\r\n        if (!driverId) {\r\n            dispatch(authLogout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(authLogout());\r\n            } else {\r\n                dispatch(authSucces(driverId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport const userAuth = (email, password) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        axios.post('/user/authenticate', {\r\n            email: email,\r\n            password: password\r\n        }).then(response => {\r\n            const expirationTime = 7200;\r\n            const expirationDate = new Date(new Date().getTime() + expirationTime * 1000);\r\n            localStorage.setItem('userId', response.data);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            dispatch(authSucces(response.data));\r\n            dispatch(checkAuthTimeout(expirationTime));\r\n        }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(authFail(response));\r\n        });\r\n    };\r\n};\r\n\r\n\r\nexport const driverRegister = (registerData) => {\r\n    return dispatch => {\r\n        axios.post('/user/driver-register', registerData)\r\n            .then(response => {\r\n                dispatch(registerSucces(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(authFail(response))\r\n        });\r\n    };\r\n};\r\n\r\nexport const adminRegister = (registerData) => {\r\n    return dispatch => {\r\n        axios.post('/user/admin-register', registerData)\r\n            .then(response => {\r\n                dispatch(registerSucces(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(authFail(response))\r\n        });\r\n    };\r\n};\r\n\r\nexport const getUserRole = (userId) => {\r\n    return dispatch => {\r\n        axios.get(`/user/${userId}/role`)\r\n            .then(response => {\r\n                dispatch(userRoleSucces(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(authFail(response))\r\n        });\r\n    };\r\n};\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../axios';\r\n\r\nexport const fetchUserDataStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_DATA_START,\r\n    };\r\n};\r\n\r\nexport const fetchUserDataSuccess = (user) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_DATA_SUCCESS,\r\n        user: user,\r\n    };\r\n};\r\n\r\nexport const fetchUserDataFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_USER_DATA_FAIL,\r\n        error: error,\r\n    };\r\n};\r\n\r\nexport const addDrivingLicenseSuccess = (license) => {\r\n    return {\r\n        type: actionTypes.ADD_DRIVER_LICENSE_SUCCESS,\r\n        license: license,\r\n    };\r\n};\r\n\r\nexport const updateDriverSuccess = (driver) => {\r\n    return {\r\n        type: actionTypes.UPDATE_DRIVER_SUCCESS,\r\n        driver: driver,\r\n    };\r\n};\r\n\r\nexport const updateUserPasswordSuccess = () => {\r\n    return {\r\n        type: actionTypes.UPDATE_USER_PASSWORD_SUCCESS,\r\n    };\r\n};\r\n\r\nexport const removeUserDataSuccess = () => {\r\n    return {\r\n        type: actionTypes.REMOVE_USER_DATA_SUCCESS,\r\n    };\r\n};\r\n\r\nexport const removeUserData = () => {\r\n    return dispatch => {\r\n        dispatch(removeUserDataSuccess());\r\n    };\r\n};\r\n\r\nexport const fetchDriverData = (userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchUserDataStart());\r\n        axios.get(`/drivers/${userId}?includeVehicles=${true}`)\r\n            .then(response => {\r\n                dispatch(fetchUserDataSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchUserDataFail(response));\r\n        });\r\n    };\r\n};\r\n\r\nexport const fetchAdminData = (userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchUserDataStart());\r\n        axios.get(`/admin/${userId}`)\r\n            .then(response => {\r\n                dispatch(fetchUserDataSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchUserDataFail(response));\r\n        });\r\n    };\r\n};\r\n\r\nexport const fetchAdministratorData = (userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchUserDataStart());\r\n        axios.get(`/administrator/${userId}`)\r\n            .then(response => {\r\n                dispatch(fetchUserDataSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchUserDataFail(response));\r\n        });\r\n    };\r\n};\r\n\r\nexport const addDriverLicense = (driverId, licenseData) => {\r\n    return dispatch => {\r\n        dispatch(fetchUserDataStart());\r\n        axios.put(`/drivers/license/${driverId}`, licenseData)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                dispatch(addDrivingLicenseSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchUserDataFail(response));\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateDriver = (driverId, driverUpdateData) => {\r\n    return dispatch => {\r\n        dispatch(fetchUserDataStart());\r\n        axios.put(`/drivers/${driverId}`, driverUpdateData)\r\n            .then(response => {\r\n                dispatch(updateDriverSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchUserDataFail(response));\r\n        });\r\n    };\r\n};\r\n\r\nexport const updateUserPassword = (userId, data) => {\r\n    return dispatch => {\r\n        dispatch(fetchUserDataStart());\r\n        axios.put(`/user/${userId}`, data)\r\n            .then(response => {\r\n                dispatch(updateUserPasswordSuccess());\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchUserDataFail(response));\r\n        });\r\n    };\r\n};\r\n\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../axios';\r\n\r\nexport const fetchDriverVehiclesStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_DRIVER_VEHICLES_START\r\n    };\r\n};\r\n\r\nexport const fetchDriverVehiclesSuccess = (vehicles) => {\r\n    return {\r\n        type: actionTypes.FETCH_DRIVER_VEHICLES_SUCCESS,\r\n        vehicles: vehicles\r\n    };\r\n};\r\n\r\nexport const fetchDriverVehiclesFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_DRIVER_VEHICLES_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const deleteDriverVehicleSuccess = (vehicleId) => {\r\n    return {\r\n        type: actionTypes.DELETE_DRIVER_VEHICLE_SUCCESS,\r\n        vehicleId: vehicleId,\r\n    };\r\n};\r\n\r\nexport const addDriverVehicleSuccess = (vehicle) => {\r\n    return {\r\n        type: actionTypes.ADD_DRIVER_VEHICLE_SUCCESS,\r\n        vehicle: vehicle\r\n    };\r\n};\r\n\r\nexport const fetchVehicleSuccess = (vehicle) => {\r\n    return {\r\n        type: actionTypes.FETCH_VEHICLE_SUCCESS,\r\n        vehicle: vehicle,\r\n    };\r\n};\r\n\r\nexport const fetchDriverVehicles = (userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchDriverVehiclesStart());\r\n        axios.get(`/drivers/${userId}/vehicles`)\r\n            .then(response => {\r\n                dispatch(fetchDriverVehiclesSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchDriverVehiclesFail(response));\r\n            })\r\n    };\r\n};\r\n\r\nexport const fetchVehicle = (vehicleId) => {\r\n    return dispatch => {\r\n        dispatch(fetchDriverVehiclesStart());\r\n        axios.get(`/vehicle/${vehicleId}`)\r\n            .then(response => {\r\n                dispatch(fetchVehicleSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchDriverVehiclesFail(response))\r\n            });\r\n    };\r\n};\r\n\r\nexport const deleteDriverVehicle = (vehicleId) => {\r\n    return dispatch => {\r\n        dispatch(fetchDriverVehiclesStart());\r\n        axios.delete(`/vehicle/${vehicleId}/delete`)\r\n            .then(() => {\r\n                dispatch(deleteDriverVehicleSuccess(vehicleId));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchDriverVehiclesFail((response)));\r\n            });\r\n    };\r\n};\r\n\r\nexport const addDriverVehicle = (userId, vehicle) => {\r\n    return dispatch => {\r\n        dispatch(fetchDriverVehiclesStart());\r\n        axios.post('/drivers/' + userId + '/vehicles', vehicle)\r\n            .then((response) => {\r\n                dispatch(addDriverVehicleSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchDriverVehiclesFail(response));\r\n            });\r\n    };\r\n};\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../axios';\r\n\r\nexport const fetchReservationsStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_RESERVATIONS_START,\r\n    };\r\n};\r\n\r\nexport const fetchReservationsSuccess = (reservations) => {\r\n    return {\r\n        type: actionTypes.FETCH_RESERVATIONS_SUCCESS,\r\n        driverReservations: reservations,\r\n    };\r\n};\r\n\r\nexport const fetchReservationsFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_RESERVATIONS_FAIL,\r\n        error: error,\r\n    };\r\n};\r\n\r\nexport const cancelReservationsSuccess = (reservation) => {\r\n    return {\r\n        type: actionTypes.CANCEL_RESERVATION_SUCCESS,\r\n        reservation: reservation\r\n    };\r\n};\r\n\r\nexport const deleteReservationsSuccess = (reservationId) => {\r\n    return {\r\n        type: actionTypes.DELETE_RESERVATION_SUCCESS,\r\n        reservationId: reservationId\r\n    };\r\n};\r\n\r\nexport const addDriverReservationSuccess = (reservation) => {\r\n    return {\r\n        type: actionTypes.ADD_DRIVER_RESERVATION_SUCCESS,\r\n        reservation: reservation,\r\n    };\r\n}\r\n\r\nexport const updateReservationSuccess = () => {\r\n    return {\r\n        type: actionTypes.UPDATE_RESERVATION_PAYMENT_SUCCESS\r\n    };\r\n}\r\n\r\nexport const fetchDriverReservations = (userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchReservationsStart());\r\n        axios.get(`/reservations/${userId}`)\r\n            .then(response => {\r\n                dispatch(fetchReservationsSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchReservationsFail(response));\r\n            });\r\n    };\r\n};\r\n\r\nexport const fetchAnonimDriverReservations = (vehicleId) => {\r\n    return dispatch => {\r\n        dispatch(fetchReservationsStart());\r\n        axios.get(`/reservations/${vehicleId}/vehicle`)\r\n            .then(response => {\r\n                dispatch(fetchReservationsSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchReservationsFail(response));\r\n            });\r\n    };\r\n};\r\n\r\nexport const fetchAreaReservations = (areaId) => {\r\n    return dispatch => {\r\n        dispatch(fetchReservationsStart());\r\n        axios.get(`/reservations/${areaId}/area`)\r\n            .then(response => {\r\n                dispatch(fetchReservationsSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchReservationsFail(response));\r\n            });\r\n    };\r\n};\r\n\r\nexport const cancelReservation = (reservationId) => {\r\n    return dispatch => {\r\n        dispatch(fetchReservationsStart());\r\n        axios.put(`/reservations/${reservationId}/cancel`)\r\n            .then(response => {\r\n                dispatch(cancelReservationsSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchReservationsFail(response));\r\n            })\r\n    };\r\n};\r\n\r\nexport const updateReservationPayment = (reservationId) => {\r\n    return dispatch => {\r\n        dispatch(fetchReservationsStart());\r\n        axios.put(`/reservations/${reservationId}/payment`)\r\n            .then(response => {\r\n                dispatch(updateReservationSuccess());\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchReservationsFail(response));\r\n        })\r\n    };\r\n};\r\n\r\nexport const deleteReservation = (reservationId) => {\r\n    return dispatch => {\r\n        dispatch(fetchReservationsStart());\r\n        axios.delete(`/reservations/${reservationId}/delete`)\r\n            .then(() => {\r\n                dispatch(deleteReservationsSuccess(reservationId));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchReservationsFail(response));\r\n            });\r\n    };\r\n};\r\n\r\nexport const addDriverReservation = (reservationData, userId, areaId) => {\r\n    return dispatch => {\r\n        dispatch(fetchReservationsStart());\r\n        axios.post(`/reservations/${areaId}?driverId=${userId}`,\r\n            reservationData)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                dispatch(addDriverReservationSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchReservationsFail(response))\r\n            });\r\n    };\r\n};\r\n\r\nexport const addAnonimReservation = (reservationData, areaId) => {\r\n    return dispatch => {\r\n        dispatch(fetchReservationsStart());\r\n        axios.post(`/reservations/${areaId}`,\r\n            reservationData)\r\n            .then(response => {\r\n                console.log(response.data)\r\n                localStorage.setItem('identifier', response.data.vehicle.id);\r\n                dispatch(addDriverReservationSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchReservationsFail(response))\r\n            });\r\n    };\r\n};\r\n\r\nexport const fetchAllReservations = () => {\r\n    return dispatch => {\r\n        dispatch(fetchReservationsStart());\r\n        axios.get(`/reservations`)\r\n            .then(response => {\r\n                dispatch(fetchReservationsSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchReservationsFail(response));\r\n        });\r\n    };\r\n};\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../axios';\r\n\r\nexport const fetchAreaStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_AREA_START,\r\n    };\r\n};\r\n\r\nexport const fetchAreaSuccess = (area) => {\r\n    return {\r\n        type: actionTypes.FETCH_AREA_SUCCESS,\r\n        area: area,\r\n    };\r\n};\r\n\r\nexport const fetchAllAreasSuccess = (areas) => {\r\n    return {\r\n        type: actionTypes.FETCH_AREAS_SUCCESS,\r\n        parkingAreas: areas,\r\n    };\r\n};\r\n\r\nexport const fetchAreaFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_AREA_FAIL,\r\n        error: error,\r\n    };\r\n};\r\n\r\nexport const fetchParkingArea = (name) => {\r\n    return dispatch => {\r\n        dispatch(fetchAreaStart());\r\n        axios.get(`/areas/${name}`)\r\n            .then(response => {\r\n                dispatch(fetchAreaSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchAreaFail(response));\r\n        });\r\n    };\r\n};\r\n\r\nexport const closeAreaSelection = () => {\r\n    return {\r\n        type: actionTypes.CLOSE_AREA_SELECTION,\r\n    };\r\n};\r\n\r\n\r\nexport const fetchParkingAreas = () => {\r\n    return dispatch => {\r\n        dispatch(fetchAreaStart());\r\n        axios.get(`/areas`)\r\n            .then(response => {\r\n                dispatch(fetchAllAreasSuccess(response.data));\r\n            }).catch(error => {\r\n            const response = error.response ? error.response : {data:'Network error'};\r\n            dispatch(fetchAreaFail(response));\r\n        });\r\n    };\r\n};\r\n","import * as actionTypes from './actionTypes';\r\n\r\nexport const updateError = () => {\r\n    return {\r\n        type: actionTypes.UPDATE_ERROR_SUCCESS,\r\n    };\r\n};\r\n","import React, {useEffect} from 'react';\n\nimport classes from './InfoContainer.module.css';\nimport Card from \"../../UI/Card/Card\";\nimport Button from \"../../UI/Button/Button\";\nimport Header from \"../../UI/Header/Header\";\nimport LoadingSpinner from \"../../UI/Loading/Loading\";\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../../../store/actions/index';\n\nconst InfoContainer = props => {\n\n    useEffect(() => {\n        if (props.userId) {\n            props.getUserRole(props.userId);\n        }\n    }, [props]);\n\n    const areaInfo = (\n        <div>\n            <Header title={props.area.emplacement} onCloseClick={props.onCloseClick}/>\n            <ul>\n                <li>\n                    <label>Locuri disponibile: </label>\n                    <strong> {props.area.availableSpots}</strong>\n                </li>\n                <li>\n                    <label>Pret/ora: </label>\n                    <strong> {props.area.pricePerHour} RON</strong>\n                </li>\n                <li>\n                    <label>Localizare amplasament: </label>\n                    <strong> {props.area.emplacementLocation !== '' ? props.area.emplacementLocation : '-'}</strong>\n                </li>\n            </ul>\n            {\n                (props.role ===200 || props.role === null) &&\n                <div className=\"text-end\">\n                    <Button onClick={props.onReserve} disabled={props.area.availableSpots === 0}>Rezerva</Button>\n                </div>\n            }\n        </div>\n    );\n\n    return (\n        <Card className={classes[\"area_info\"]}>\n            {\n                props.loading ? <LoadingSpinner/> : props.area && areaInfo\n            }\n        </Card>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userId: state.driverAuth.userId,\n        role: state.driverAuth.role,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getUserRole: (userId) => dispatch(actionCreators.getUserRole(userId)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoContainer);\n","import React from 'react';\n\nimport classes from './Input.module.css';\n\nconst Input = props => {\n    return (\n        <div className={`${classes.control} ${props.isValid === false ? classes.invalid : ''} ${props.className ? props.className : ''}`}>\n            <label htmlFor={props.id}>\n                {props.label}\n            </label>\n            <input\n                required={true}\n                type={props.type}\n                placeholder={props.placeholder ? props.placeholder : ''}\n                id={props.id}\n                name={props.name ? props.name : ''}\n                value={props.value}\n                onChange={props.onChange}\n                onBlur={props.onBlur}\n                disabled={props.disabled ? props.disabled : false}\n                min={props.min}\n                max={props.max}\n                autoComplete={props.autocomplete}\n            />\n            {\n                props.children\n            }\n        </div>\n    );\n};\n\nexport default Input;\n","import React from 'react';\r\n\r\nimport Card from '../Card/Card';\r\nimport Button from '../Button/Button';\r\nimport classes from './Modal.module.css';\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <div>\r\n            <div className={classes.backdrop} />\r\n            <Card className={classes.modal}>\r\n                <header className={classes.header}>\r\n                    <h2>{props.title}</h2>\r\n                </header>\r\n                <div className={classes.content}>\r\n                    <p>{props.message}</p>\r\n                    {props.children}\r\n                </div>\r\n\r\n                <footer className={classes.actions}>\r\n                    {props.cancel && <Button className={classes.cancel} onClick={props.onCancel}>Anuleaza</Button>}\r\n                    <Button onClick={props.onConfirm}>Ok</Button>\r\n                </footer>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import React, {useState} from 'react';\r\nimport {CardElement, useElements, useStripe} from '@stripe/react-stripe-js';\r\nimport classes from './ReservationPayment.module.css';\r\nimport {DollarSign} from \"react-feather\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport LoadingSpinner from \"../../UI/Loading/Loading\";\r\nimport axios from '../../../store/axios';\r\nimport Modal from \"../../UI/Modal/Modal\";\r\n\r\nconst CARD_OPTIONS = {\r\n    style: {\r\n        base: {\r\n            color: \"#12232e\",\r\n            fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n            fontSmoothing: \"antialiased\",\r\n            fontSize: \"16px\",\r\n            \"::placeholder\": {\r\n                color: \"#305f72\",\r\n            },\r\n        },\r\n        invalid: {\r\n            color: \"rgba(239, 71, 111, 0.8)\",\r\n            iconColor: \"#ef476f\",\r\n        },\r\n    },\r\n    hidePostalCode: true,\r\n};\r\n\r\nconst ReservationPayment = (props) => {\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const [isPaymentProcessing, setIsPaymentProcessing] = useState(false);\r\n    const [checkoutError, setCheckoutError] = useState();\r\n\r\n    const handleCardDetailsChange = ev => {\r\n        ev.error ? setCheckoutError(ev.error.message) : setCheckoutError();\r\n    };\r\n\r\n    const handleReservationPay = async event => {\r\n        event.preventDefault();\r\n\r\n        setIsPaymentProcessing(true);\r\n\r\n        const cardElement = elements.getElement(CardElement);\r\n\r\n        try {\r\n            const {data: clientSecret} = await axios.post('/charges', {\r\n                amount: props.price * 100,\r\n            });\r\n\r\n            const paymentMethodRequest = await stripe.createPaymentMethod({\r\n                type: \"card\",\r\n                card: cardElement,\r\n            });\r\n\r\n            if (paymentMethodRequest.error) {\r\n                setCheckoutError(paymentMethodRequest.error.message);\r\n                setIsPaymentProcessing(false);\r\n                return;\r\n            }\r\n\r\n            await stripe.confirmCardPayment(clientSecret, {\r\n                payment_method: paymentMethodRequest.paymentMethod.id,\r\n            });\r\n\r\n            props.onPay();\r\n        } catch (error) {\r\n            setIsPaymentProcessing(false);\r\n            setCheckoutError(error.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.loading ? <LoadingSpinner/> :\r\n                    <div className={classes.payment}>\r\n                        <p>Efectueaza plata pentru rezervarea la {props.area.emplacement}</p>\r\n                        <div className={classes[\"reservation-details\"]}>\r\n                            <p>Durata: {props.duration}</p>\r\n                            <p>Total de plata: {props.price} RON</p>\r\n                        </div>\r\n                        <label>Introduceti informatiile cardului</label>\r\n                        <div className={classes[\"payment-details\"]}>\r\n                            <CardElement options={CARD_OPTIONS} onChange={handleCardDetailsChange}/>\r\n                        </div>\r\n                        <div className={classes[\"payment-actions\"]}>\r\n                            <Button type=\"submit\" onClick={handleReservationPay}\r\n                                    disabled={isPaymentProcessing || !stripe}>\r\n                                {\r\n                                    isPaymentProcessing ? 'Procesare...' :\r\n                                        <div><DollarSign/> Plateste {props.price} RON</div>\r\n                                }\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            {\r\n                checkoutError && <Modal title=\"Eroare la procesarea platii\" message={checkoutError}\r\n                                        onConfirm={() => setCheckoutError(null)}/>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n;\r\n\r\nexport default ReservationPayment;\r\n","import {format} from \"date-fns\";\r\n\r\nexport const dateFormat = (date) => {\r\n    return format(new Date(date), \"yyyy-MM-dd\");\r\n};\r\n\r\nexport const timeFormat = (date) => {\r\n    return new Date(date).toTimeString().substr(0,5)\r\n}\r\n","import {format} from 'date-fns';\r\n\r\nexport const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n\r\n    if (!rules) {\r\n        return true;\r\n    }\r\n\r\n    if (rules.isRequired) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n        isValid = value.length >= rules.minLength && isValid\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid\r\n    }\r\n\r\n    if (rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isPhoneNumber) {\r\n        const pattern = /(\\+4|)?(07[0-9]{1}[0-9]{1}|02[0-9]{2}|03[0-9]{2}){1}?(\\s|\\.|)?([0-9]{3}(\\s|\\.|)){2}$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n\r\n    if (rules.isLicenseNumber) {\r\n        const pattern = /[A-Za-z]\\d{8}[A-Za-z]$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.isLicensePlate) {\r\n        const pattern = /[A-Z]{1,2}[0-9]{1,3}[A-Z]{3}$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if (rules.isExpirationDate) {\r\n        const todayDate = format(new Date(), \"yyyy-MM-dd\");\r\n        isValid = value.localeCompare(todayDate) === 1 || value.localeCompare(todayDate) === 0;\r\n    }\r\n\r\n    return isValid;\r\n}\r\n","export const getAreaZone = (price) => {\r\n    switch (price) {\r\n        case 10:\r\n            return 'ZONA 0 - CENTRU';\r\n        case 5:\r\n            return 'ZONA 1';\r\n        default:\r\n            return 'ZONA 2';\r\n    }\r\n};\r\n\r\nexport const getNumberOfReservatiosn = (reservations, state) => {\r\n    let number = 0;\r\n    if (reservations.length > 0) {\r\n        reservations.forEach(reservation => {\r\n            if (reservation.state === state) {\r\n                number += 1;\r\n            }\r\n        });\r\n    }\r\n    return number;\r\n}\r\n\r\nexport const getDuration = (startTime, endTime) => {\r\n    let start = startTime.split(':');\r\n    if (start[0] === '00') {\r\n        start[0] = '24';\r\n    }\r\n    let end = endTime.split(':');\r\n    if (end[0] === '00') {\r\n        end[0] = '24';\r\n    }\r\n    let startDate = new Date(0, 0, 0, start[0], start[1], 0);\r\n    let endDate = new Date(0, 0, 0, end[0], end[1], 0);\r\n    let diff = endDate.getTime() - startDate.getTime();\r\n    let hours = Math.floor(diff / 1000 / 60 / 60);\r\n    diff -= hours * 1000 * 60 * 60;\r\n    let minutes = Math.floor(diff / 1000 / 60);\r\n    return `${hours} ${hours > 1 ? ' ore' : ' ora'} ${minutes > 0 ? ` si ${minutes} minute` : ''}`\r\n}\r\n","import React, {Fragment, useEffect, useState} from 'react';\n\nimport classes from './ReservationForm.module.css';\nimport Input from \"../../UI/Input/Input\";\nimport Button from \"../../UI/Button/Button\";\nimport {Col, Row} from \"react-bootstrap\";\nimport {Check, Plus} from 'react-feather';\nimport ReservationPayment from \"../ReservationPayment/ReservationPayment\";\nimport {format} from 'date-fns';\nimport * as formatData from '../../../utility/dateFormat';\nimport * as validate from \"../../../utility/validateHandler\";\nimport * as data from \"../../../utility/dataUtility\";\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {loadStripe} from \"@stripe/stripe-js\";\nimport {Elements} from \"@stripe/react-stripe-js\";\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_TOKEN);\n\nconst today = format(new Date(), \"yyyy-MM-dd\");\nconst tomorrowDate = new Date(today)\ntomorrowDate.setDate(new Date().getDate() + 1);\ntomorrowDate.toLocaleDateString();\nconst tomorrow = formatData.dateFormat(tomorrowDate);\n\nconst startTime = formatData.timeFormat(new Date().setMinutes(new Date().getMinutes() + 30)).toString();\nconst endTime = formatData.timeFormat(new Date().setMinutes(new Date().getMinutes() + 90)).toString();\n\nconst ReservationForm = (props) => {\n\n    const [showLicensePlateInput, setShowLicensePlateInput] = useState(false);\n    const [goToPayment, setGoToPayment] = useState(false);\n\n    const [duration, setDuration] = useState('');\n    const [price, setPrice] = useState(0);\n\n    const [userInput, setUserInput] = useState({\n        enteredDate: today,\n        enteredStartTime: startTime,\n        enteredEndTime: endTime,\n        enteredLicensePlate: '',\n    });\n\n    const [isUserInputValid, setIsUserInputValid] = useState({\n        enteredDate: true,\n        enteredStartTime: true,\n        enteredEndTime: true,\n        enteredLicensePlate: null,\n    });\n\n    const [formIsValid, setFormIsValid] = useState(null);\n\n    const rules = {\n        enteredDate: {\n            isRequired: true,\n        },\n        enteredStartTime: {\n            isRequired: true,\n        },\n        enteredEndTime: {\n            isRequired: true,\n        },\n        enteredLicensePlate: {\n            isRequired: true,\n            isLicensePlate: true,\n        },\n    };\n\n    useEffect(() => {\n        const identifier = setTimeout(() => {\n            setFormIsValid(\n                isUserInputValid.enteredDate && isUserInputValid.enteredStartTime && isUserInputValid.enteredEndTime && isUserInputValid.enteredLicensePlate\n            );\n        }, 500);\n\n        return () => {\n            clearTimeout(identifier);\n        };\n    }, [isUserInputValid]);\n\n    const validateUserInput = (event) => {\n        setIsUserInputValid((prevState => {\n            return {\n                ...prevState,\n                [event.target.name]:\n                    validate.checkValidity(event.target.value,\n                        rules[event.target.name]),\n            };\n        }));\n    };\n\n    const handleReserve = (event) => {\n        event.preventDefault();\n\n        const reservationData = {\n            reservationDate: userInput.enteredDate,\n            startTime: userInput.enteredStartTime,\n            endTime: userInput.enteredEndTime,\n            vehicle: {\n                licensePlate: userInput.enteredLicensePlate,\n            },\n        };\n\n        if (formIsValid) {\n            if (props.userId) {\n                props.onDriverAdd(reservationData, props.userId, props.area.id);\n            } else {\n                props.onAnonimAdd(reservationData, props.area.id);\n            }\n        }\n    }\n\n    const handlePay = () => {\n        props.onPay(props.reservation.id);\n\n        setUserInput({\n            enteredDate: today,\n            enteredStartTime: startTime,\n            enteredEndTime: endTime,\n            enteredLicensePlate: '',\n        })\n        setGoToPayment(false);\n        props.onSuccess();\n    };\n\n    useEffect(()=>{\n        if(props.reservation && props.reservation.id) {\n            setDuration(data.getDuration(\n                formatData.timeFormat(props.reservation.startTime),\n                formatData.timeFormat(props.reservation.endTime)));\n            setGoToPayment(true);\n            setPrice(props.reservation.price);\n        }\n    }, [props.reservation])\n\n    const handleInputChange = (event) => {\n        setUserInput((prevState) => {\n            return {\n                ...prevState,\n                [event.target.name]: event.target.value\n            };\n        });\n    };\n\n    console.log(duration)\n\n\n    const handleAddLicensePlate = () => {\n        setShowLicensePlateInput(true);\n    };\n\n    const reservationForm = (\n        <div className={classes[\"reservation-form\"]}>\n            <h3>{props.area.emplacement}</h3>\n            <label>*puteti rezerva cu minim 30 de minute inainte pentru o perioada de cel putin o ora</label>\n            <form className={classes[\"new-reservation__controls\"]}>\n                <Input\n                    id=\"date\"\n                    label=\"Data rezervarii\"\n                    type=\"date\"\n                    name=\"enteredDate\"\n                    min={today}\n                    max={tomorrow}\n                    value={userInput.enteredDate}\n                    isValid={isUserInputValid.enteredDate}\n                    onChange={handleInputChange}\n                    onBlur={validateUserInput}\n                />\n                <Row>\n                    <Col>\n                        <Input\n                            id=\"startTime\"\n                            label=\"De la\"\n                            type=\"time\"\n                            name=\"enteredStartTime\"\n                            min={startTime}\n                            isValid={isUserInputValid.enteredStartTime}\n                            value={userInput.enteredStartTime}\n                            onChange={handleInputChange}/>\n                    </Col>\n                    <Col>\n                        <Input\n                            id=\"endTime\"\n                            label=\"Pana la\"\n                            type=\"time\"\n                            name=\"enteredEndTime\"\n                            value={userInput.enteredEndTime}\n                            isValid={isUserInputValid.enteredEndTime}\n                            onChange={handleInputChange}\n                            onBlur={validateUserInput}\n                        />\n                    </Col>\n                </Row>\n                <div\n                    className={`${classes.control} ${isUserInputValid.enteredLicensePlate === false ? classes.invalid : ''}`}>\n                    <label htmlFor=\"enteredLicensePlate\">Numar inmatriculare</label>\n                    {\n                        props.vehicles.length > 0 && !showLicensePlateInput ?\n                            <div>\n                                <select\n                                    name=\"enteredLicensePlate\"\n                                    value={userInput.enteredLicensePlate.length > 0 ? userInput.enteredLicensePlate : \"Selecteaza\"}\n                                    aria-invalid={!isUserInputValid.enteredLicensePlate}\n                                    onChange={handleInputChange}\n                                    onBlur={validateUserInput}\n                                >\n                                    <option value=\"Selecteaza\" disabled={true}>Selecteaza</option>\n                                    {\n                                        props.vehicles.map((vehicle, index) => (\n                                            <option key={index}\n                                            >\n                                                {vehicle.licensePlate}\n                                            </option>\n                                        ))\n                                    }\n                                </select>\n                                <Button onClick={handleAddLicensePlate}>\n                                    <Plus/>\n                                </Button>\n                            </div> :\n                            <input\n                                placeholder=\"B99BBB\"\n                                required={true}\n                                type=\"text\"\n                                id=\"enteredLicensePlate\"\n                                name=\"enteredLicensePlate\"\n                                value={userInput.enteredLicensePlate}\n                                aria-invalid={!isUserInputValid.enteredLicensePlate}\n                                onChange={handleInputChange}\n                                onBlur={validateUserInput}\n                            />\n                    }\n                </div>\n                <div className={classes[\"new-reservation__actions\"]}>\n                    <Button type=\"submit\" onClick={handleReserve}>\n                        Rezerva <Check/>\n                    </Button>\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <Fragment>\n            {\n                !goToPayment && !props.userId && <div className={classes[\"anonim-info\"]}>\n                    <p>Rezervati in mod anonim. Aveti un cont? Autentificati-va <Link to=\"/profile\"> aici</Link>.</p>\n                </div>\n            }\n            {\n                !props.loading && goToPayment &&\n                <Elements stripe={stripePromise}>\n                    <ReservationPayment duration={duration} price={price} area={props.area} loading={props.loading}\n                                        onPay={handlePay}/>\n                </Elements>\n            }\n            {!goToPayment && reservationForm}\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = state => {\n        return {\n            reservation: state.reservations.reservation,\n            selectedArea: state.parkingArea.selectedArea,\n        };\n    }\n;\n\nexport default connect(mapStateToProps, null)(ReservationForm);\n","import React from 'react';\nimport ReservationForm from \"../ReservationForm/ReservationForm\";\nimport classes from './NewReservation.module.css';\nimport Header from \"../../UI/Header/Header\";\nimport {connect} from \"react-redux\";\nimport * as actionCreators from \"../../../store/actions\";\nimport LoadingSpinner from \"../../UI/Loading/Loading\";\nimport Modal from \"../../UI/Modal/Modal\";\n\nconst NewReservation = (props) => {\n\n    return (\n        <div className={classes[\"new-reservation\"]}>\n            <Header title=\"Rezervare noua\" onCloseClick={props.onCloseClick}/>\n            {props.loading ? <LoadingSpinner/> :\n                <ReservationForm\n                    userId={props.userId}\n                    area={props.selectedArea}\n                    vehicles={props.vehicles}\n                    onDriverAdd={props.onDriverReservationAdd}\n                    onAnonimAdd={props.onAnonimReservationAdd}\n                    onSuccess={props.onSuccess}\n                    onPay={props.onPay}\n                />\n            }\n            {\n                props.error && <Modal title=\"Date incorecte\" message={props.error.data} onConfirm={props.onErrorClose}/>\n            }\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        vehicles: state.driverVehicles.vehicles,\n        selectedArea: state.parkingArea.selectedArea,\n        userId: state.driverAuth.userId,\n        loading: state.reservations.loading,\n        error: state.reservations.error,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDriverReservationAdd: (data, userId, areaId) => dispatch(actionCreators.addDriverReservation(data, userId, areaId)),\n        onAnonimReservationAdd: (data, areaId) => dispatch(actionCreators.addAnonimReservation(data, areaId)),\n        onPay: (reservationId) => dispatch(actionCreators.updateReservationPayment(reservationId)),\n        onErrorClose: () => dispatch(actionCreators.updateError()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewReservation);\n","import React from 'react';\n\nimport classes from './FloatingButton.module.css';\n\nconst FloatingButton = props => {\n    return (\n        <div className={classes[\"floating-button\"]} onClick={props.onClick}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default FloatingButton;\n","import React from 'react';\nimport classes from \"./SearchAction.module.css\";\nimport {Search} from \"react-feather\";\nimport FloatingButton from \"../../../UI/FloatingButton/FloatingButton\";\n\nconst SearchAction = props => {\n    return (\n        <div className={classes[\"search-actions\"]}>\n            <FloatingButton onClick={props.onSearchClick}>\n                <Search color='var(--DarkBlue)'/>\n            </FloatingButton>\n        </div>\n    );\n};\n\nexport default SearchAction;\n","import React, {useState} from 'react';\n\nimport classes from './SearchContainer.module.css';\nimport Header from \"../../../UI/Header/Header\";\nimport {Form} from \"react-bootstrap\";\n\nconst SearchContainer = props => {\n\n    const [userInputSearch, setUserInputSearch] = useState('');\n\n    const handleUserInputChange = event => {\n        setUserInputSearch(event.target.value);\n    }\n\n    const filteredAreas = props.data.filter(\n        area => (\n            area.properties[\"AMPLASAMENT\"].toLowerCase().includes(userInputSearch.toLowerCase()) ||\n            area.properties[\"LOCALIZARE AMPLASAMENT\"].toLowerCase().includes(userInputSearch.toLowerCase()) ||\n            area.properties[\"ORAS\"].toLowerCase().includes(userInputSearch.toLowerCase())\n        ));\n\n    return (\n        <div className={classes[\"search-container\"]}>\n            <Header title=\"Cautati o zona de parcare\" onCloseClick={props.onCloseClick}/>\n            <Form>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Introduceti o locatie\"\n                    value={userInputSearch}\n                    onChange={handleUserInputChange}\n                />\n            </Form>\n            <ul className=\"scroll\">\n                {\n                    filteredAreas.length > 0 ?\n                    filteredAreas.map((area, index) => {\n                        return (\n                            <li key={index}\n                                className={classes[\"search-result\"]}\n                                onClick={() => props.onSelectLocation(area.properties, area.geometry.coordinates)}\n                            >\n                                {area.properties[\"AMPLASAMENT\"]}\n                            </li>\n                        )\n                    }) :\n                        <h2 className={classes[\"search-container__fallback\"]}>\n                            Nicio zona de parcare gasita.\n                        </h2>\n                }\n            </ul>\n        </div>\n    );\n};\n\nexport default SearchContainer;\n","import React from 'react';\nimport SearchAction from \"./SearchAction/SearchAction\";\nimport SearchContainer from \"./SearchContainer/SearchContainer\";\n\nconst Search = props => {\n\n    return (\n        <div>\n            <SearchAction onSearchClick={props.onSearchClick}/>\n            {\n                props.show &&\n                <SearchContainer\n                    data={props.data}\n                    onCloseClick={props.onCloseClick}\n                    onSelectLocation={props.onClickResult}\n                />\n            }\n        </div>\n    );\n};\n\nexport default Search;\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nimport * as reports from '../../../utility/reports';\r\nimport ReportsFilter from \"../ReservationsFilter/ReportsFilter/ReportsFilter\";\r\n\r\nimport classes from './ReservationsReports.module.css';\r\nimport Card from \"../../UI/Card/Card\";\r\nimport html2canvas from \"html2canvas\";\r\nimport jsPDF from \"jspdf\";\r\n\r\nconst months = [];\r\nfor (let i = 0; i < 12; i++) {\r\n    months[i] = i;\r\n}\r\n\r\nconst labels = months.map(month => reports.getMonth(month));\r\n\r\nlet datasets = [];\r\n\r\nlet data = {\r\n    labels: labels,\r\n    datasets: [\r\n        {\r\n            label: 'rezervari',\r\n            data: datasets,\r\n            backgroundColor: [\r\n                '#4da8da',\r\n            ],\r\n            borderColor: [\r\n                '#000',\r\n            ],\r\n            borderWidth: 0.5,\r\n        },\r\n    ],\r\n};\r\n\r\nconst options = {\r\n    scales: {\r\n        yAxes: [\r\n            {\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    color: '#000',\r\n                },\r\n\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nconst ReservationsReports = props => {\r\n\r\n    const docRef = useRef();\r\n\r\n    const [chartRef, setChartRef] = useState();\r\n\r\n    const [filteredStatus, setFilteredStatus] = useState('2021');\r\n\r\n    const filteredReservations = props.reservations.filter(reservation => {\r\n        return new Date(reservation.reservationDate).getFullYear().toString() === filteredStatus\r\n    });\r\n\r\n    const filterChangeHandler = selectedStatus => {\r\n        setFilteredStatus(selectedStatus);\r\n    };\r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < months.length; i++) {\r\n            datasets[i] = reports.getReservationsPerMonth(filteredReservations, months[i]);\r\n        }\r\n        if (chartRef) {\r\n            chartRef.data.datasets[0].data = datasets;\r\n            chartRef.update()\r\n        }\r\n    }, [filteredReservations, chartRef]);\r\n\r\n\r\n    const saveDocument = (print) => {\r\n        const document = docRef.current;\r\n\r\n        html2canvas(document)\r\n            .then((canvas) => {\r\n                const imgData = canvas.toDataURL('image/png');\r\n                const pdf = new jsPDF('p','px','a4');\r\n\r\n                const ratio = canvas.height/canvas.width;\r\n                const width = pdf.internal.pageSize.getWidth();\r\n                const height = width * ratio;\r\n\r\n                pdf.setTextColor(0, 0, 0);\r\n                pdf.text('Raport rezervari lunare', 20, 20);\r\n                pdf.text(`${filteredStatus}`, 20, 35);\r\n                pdf.text(`Zona de parcare: ${props.area}`, 20, 50);\r\n\r\n                pdf.addImage(imgData, 'JPEG', 20, 70, width - 40, height + 70);\r\n\r\n                if (print === true) {\r\n                    pdf.autoPrint();\r\n                    window.open(pdf.output('bloburl'), '_blank');\r\n                } else {\r\n                    pdf.save(`raport_zona_${props.area}.pdf`);\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Card className={classes['reports']}>\r\n            <div>\r\n                <div>\r\n                    <h2>Raport rezervari lunare</h2>\r\n                    <p>Zona de parcare: {props.area}</p>\r\n                </div>\r\n                <div>\r\n                    <ReportsFilter\r\n                        selectedStatus={filteredStatus}\r\n                        save={filteredReservations.length > 0}\r\n                        onChangeFilter={filterChangeHandler}\r\n                        onDownload={() => saveDocument(false)}\r\n                        onPrint={() => saveDocument(true)}\r\n                    />\r\n                </div>\r\n                {\r\n                    filteredReservations.length > 0 ?\r\n                        <div ref={docRef}>\r\n                            <Bar\r\n                                ref={(ref) => {\r\n                                    setChartRef(ref)\r\n                                }}\r\n                                data={data}\r\n                                options={options}\r\n                                title=\"Raport rezervari lunare\"\r\n                            />\r\n                        </div>\r\n                        : <h4>Nu s-au realizat rezervari</h4>\r\n                }\r\n\r\n            </div>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ReservationsReports;\r\n","import React, { useState } from 'react';\nimport MapContainer from \"../../components/Map/MapContainer/MapContainer\";\nimport UserLocation from \"../../components/Map/UserLocation/UserLocation\";\nimport Layers from \"../../components/Map/Layers/layers\";\nimport InfoContainer from \"../../components/Map/InfoContainer/InfoContainer\";\nimport NewReservation from \"../../components/Reservations/NewReservation/NewReservation\";\nimport Search from \"../../components/Map/Search/Search\";\n\nimport data from '../../data/parcari.json';\nimport * as actionCreators from \"../../store/actions\";\nimport { connect } from \"react-redux\";\nimport Modal from \"../../components/UI/Modal/Modal\";\n\nfunction Home(props) {\n\n    const [viewport, setViewport] = useState({\n        latitude: 44.439663,\n        longitude: 26.096306,\n        zoom: 12,\n    });\n\n    const [showPopup, setShowPopup] = useState(false);\n    const [showReserveForm, setShowReserveForm] = useState(false);\n    const [showSearchContainer, setShowSearchContainer] = useState(false);\n    const [reservationSuccess, setReservationSuccess] = useState(false);\n\n    const handleViewportChange = (event) => {\n        setViewport(event);\n    };\n\n    const handleAreaClick = (area, coords) => {\n        setViewport({\n            ...viewport,\n            longitude: coords[0],\n            latitude: coords[1],\n            zoom: 19,\n            transitionDuration: 1000\n        });\n\n        if (props.driverId) {\n            props.onFetchVehicles(props.driverId);\n        }\n        else {\n            const vehicleId = localStorage.getItem(`identifier`);\n            if (vehicleId) {\n                props.onFetchVechicle(vehicleId)\n            }\n        }\n\n        props.onFetchParkingArea(area[\"AMPLASAMENT\"]);\n\n        setShowPopup(true);\n        setShowSearchContainer(false);\n    };\n\n    const handleClusterExpansion = (zoom, coords) => {\n        setViewport({\n            ...viewport,\n            longitude: coords[0],\n            latitude: coords[1],\n            zoom,\n            transitionDuration: 500\n        });\n    }\n\n    const handleSearchClick = () => {\n        setShowSearchContainer(true);\n    }\n\n    const handleReserveClick = event => {\n        setShowPopup(false);\n        setShowReserveForm(true);\n    };\n\n    const handleCloseClick = event => {\n        setShowPopup(false);\n        setShowReserveForm(false);\n        props.onCloseAreaSelection();\n        setShowSearchContainer(false);\n        setViewport({\n            ...viewport,\n            zoom: 12,\n            transitionDuration: 2000\n        });\n    }\n\n    const handleReservationSuccess = () => {\n        if(!props.error) {\n            setShowReserveForm(false);\n            setReservationSuccess(true);\n        }\n    }\n\n    const handleCloseReservationSucces = () =>{\n        setReservationSuccess(false);\n        setViewport({\n            ...viewport,\n            zoom: 12,\n            transitionDuration: 2000\n        });\n    }\n\n    return (\n        <React.Fragment>\n            <Search\n                show={showSearchContainer}\n                data={data.features}\n                onSearchClick={handleSearchClick}\n                onClickResult={handleAreaClick}\n                onCloseClick={handleCloseClick}\n            />\n\n            <MapContainer\n                viewport={viewport}\n                onViewportChange={handleViewportChange}\n                onAreaClick={handleAreaClick}\n                onClusterExpansion={handleClusterExpansion}\n            >\n                <Layers />\n                <UserLocation />\n            </MapContainer>\n\n            {\n                showPopup && <InfoContainer\n                    loading={props.loading}\n                    area={props.selectedArea}\n                    onReserve={handleReserveClick}\n                    onCloseClick={handleCloseClick}\n                />\n            }\n\n            {showReserveForm && <NewReservation area={props.selectedArea} onCloseClick={handleCloseClick} onSuccess={handleReservationSuccess} />}\n            {reservationSuccess && <Modal title=\"Rezervare\" message=\"Rezervarea s-a realizat cu success!\" onConfirm={handleCloseReservationSucces}/>}\n\n        </React.Fragment>\n\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.parkingArea.loading,\n        error: state.reservations.error,\n        selectedArea: state.parkingArea.selectedArea,\n        driverId: state.driverAuth.userId,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchParkingArea: (name) => dispatch(actionCreators.fetchParkingArea(name)),\n        onFetchVehicles: (driverId) => dispatch(actionCreators.fetchDriverVehicles(driverId)),\n        onFetchVechicle: (vehicleId) => dispatch(actionCreators.fetchVehicle(vehicleId)),\n        onCloseAreaSelection: () => dispatch(actionCreators.closeAreaSelection()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, {useState} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport classes from './Navigation.module.css';\nimport {Menu, X} from 'react-feather';\nimport FloatingButton from \"../UI/FloatingButton/FloatingButton\";\nimport {connect} from \"react-redux\";\nimport {User, Calendar, Home} from 'react-feather';\nimport {BiCar} from 'react-icons/bi';\nimport {RiParkingBoxLine} from \"react-icons/all\";\n\n\nconst Navigation = (props) => {\n\n    const [showSidebar, setShowSidebar] = useState(false);\n    const anonimIdentifier = localStorage.getItem(\"identifier\") !== null;\n\n    const handleNavClick = () => {\n        setShowSidebar(!showSidebar);\n    }\n\n\n    return (\n        <div className={classes[\"nav-container\"]}>\n            <FloatingButton onClick={handleNavClick}>\n                <Menu color='var(--DarkBlue)'/>\n            </FloatingButton>\n            {\n                showSidebar &&\n                <nav className={classes[\"nav-menu\"]}>\n                    <button type=\"button\" onClick={handleNavClick}><X/></button>\n                    <ul className={classes[\"nav-menu-items\"]}>\n                        <li className={classes[\"nav-text\"]} onClick={handleNavClick}>\n                            <NavLink to=\"/\">\n                                <Home/>\n                                <span>Home</span>\n                            </NavLink>\n                        </li>\n                        <li className={classes[\"nav-text\"]} onClick={handleNavClick}>\n                            <NavLink to=\"/reservations\">\n                                <Calendar/>\n                                <span>Rezervari</span>\n                            </NavLink>\n                        </li>\n                        {\n                            (props.role === 200 || (anonimIdentifier && props.role === null)) &&\n                            <li className={classes[\"nav-text\"]} onClick={handleNavClick}>\n                                <NavLink to=\"/vehicles\">\n                                    <BiCar size={25}/>\n                                    <span>Masini</span>\n                                </NavLink>\n                            </li>\n                        }\n                        {\n                            props.role === 220  &&\n                            <li className={classes[\"nav-text\"]} onClick={handleNavClick}>\n                                <NavLink to=\"/parking-areas\">\n                                    <RiParkingBoxLine size={26}/>\n                                    <span>Zone de parcare</span>\n                                </NavLink>\n                            </li>\n                        }\n                        <li className={classes[\"nav-text\"]} onClick={handleNavClick}>\n                            <NavLink\n                                to={props.userId !== null && props.role === 200 ? \"/profile\" : props.role === 210 ? \"/admin-dashboard\" : \"/login\"}>\n                                <User/>\n                                <span>Utilizator</span>\n                            </NavLink>\n                        </li>\n                    </ul>\n                </nav>\n            }\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userId: state.driverAuth.userId,\n        role: state.driverAuth.role,\n    }\n}\n\nexport default connect(mapStateToProps, null)(Navigation);\n","import React, {useState} from 'react';\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./NewVehicle.module.css\";\nimport Header from \"../UI/Header/Header\";\nimport Input from \"../UI/Input/Input\";\nimport Button from \"../UI/Button/Button\";\nimport * as validate from '../../utility/validateHandler';\n\nconst NewVehicle = props => {\n\n    const [isLicensePlateValid, setIsLicensePlateValid] = useState();\n\n    const rules = {\n        enteredLicensePlate: {\n            isRequired: true,\n            isLicensePlate: true,\n        },\n    };\n\n    const validateLicensePlate = (event) => {\n        setIsLicensePlateValid(\n            validate.checkValidity(event.target.value, rules.enteredLicensePlate)\n        );\n    }\n\n    const handleSubmit = () => {\n        if (isLicensePlateValid) {\n            props.onAdd();\n        }\n    }\n\n    return (\n        <Card className={classes[\"new-vehicle\"]}>\n            <Header title=\"Masina noua\" onCloseClick={props.onCloseClick}/>\n            <form>\n                <Input\n                    id=\"licensePlate\"\n                    label=\"Numar inmatriculare\"\n                    type=\"text\"\n                    placeholder=\"B99BBB\"\n                    name=\"enteredLicensePlate\"\n                    isValid={isLicensePlateValid}\n                    value={props.data}\n                    onChange={props.onChange}\n                    onBlur={validateLicensePlate}\n                />\n                <div className={classes[\"new-vehicle__actions\"]}>\n                    <Button type=\"submit\" onClick={handleSubmit}>Adauga</Button>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default NewVehicle;\n","import React from 'react';\r\nimport {X} from \"react-feather\";\r\nimport Card from \"../Card/Card\";\r\n\r\nimport classes from './InfoMessage.module.css';\r\n\r\nconst InfoMessage = props => {\r\n    return (\r\n        <Card className={`${classes[\"info-message\"]} ${props.className}`}>\r\n            <div className=\"text-end\">\r\n                <button onClick={props.onClick}><X/></button>\r\n            </div>\r\n            <p>{props.message}</p>\r\n            {props.children}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default InfoMessage;\r\n","import React, {useEffect, useState} from 'react';\nimport {Card, CardDeck} from \"react-bootstrap\";\nimport Button from \"../../components/UI/Button/Button\";\n\nimport classes from './Vehicles.module.css';\nimport {BiCar} from \"react-icons/bi\";\nimport {Plus} from \"react-feather\";\nimport FloatingButton from \"../../components/UI/FloatingButton/FloatingButton\";\nimport NewVehicle from \"../../components/NewVehicle/NewVehicle\";\nimport {connect} from \"react-redux\";\nimport * as actionCreators from \"../../store/actions\";\nimport LoadingSpinner from \"../../components/UI/Loading/Loading\";\nimport InfoMessage from \"../../components/UI/InfoMessage/InfoMessage\";\n\nconst Vehicles = (props) => {\n\n    const vehicleId = localStorage.getItem(`identifier`);\n    const [showAddVehicle, setShowAddVehicle] = useState(false);\n    const [enteredLicensePlate, setEnteredLicensePlate] = useState('');\n    const [showAnonimMessage, setShowAnonimMessage] = useState(props.userId === null);\n\n    useEffect(() => {\n        if (props.userId) {\n            if (props.role && props.role === 200) {\n                props.onDriverVehiclesFetch(props.userId);\n            }\n        } else {\n            if (vehicleId) {\n                props.onFetchVechicle(vehicleId)\n            }\n        }\n    }, [props.userId, props.role, vehicleId]);\n\n    const handleInputChange = (event) => {\n        setEnteredLicensePlate(event.target.value);\n    };\n\n    const handleAddVehicleClick = () => {\n        setShowAddVehicle(true);\n    };\n\n    const handleCloseClick = () => {\n        setShowAddVehicle(false);\n    };\n\n    const handleVehicleAdd = () => {\n        props.onDriverVehicleAdd(props.userId, {\n            licensePlate: enteredLicensePlate,\n        });\n\n        setShowAddVehicle(false);\n        setEnteredLicensePlate('');\n    };\n\n    const handleAnonimMessageClose = () => {\n        setShowAnonimMessage(false);\n    };\n\n    const vehicleList = (\n        <CardDeck>\n            {\n                props.vehicles.length > 0 && props.vehicles.map((vehicle, index) => (\n                    <Card key={index} className={classes[\"vehicle-card\"]}>\n                        <Card.Body className=\"text-center\">\n                            <Card.Title>\n                                <BiCar size={25} color='white'/>\n                            </Card.Title>\n                            <Card.Text className={classes[\"vehicle-card__text\"]}>\n                                {vehicle.licensePlate}\n                            </Card.Text>\n                            <Button\n                                onClick={() => {\n                                    props.onDriverVehicleDelete(vehicle.id)\n                                }}\n                            >\n                                Sterge\n                            </Button>\n                        </Card.Body>\n                    </Card>\n                ))\n            }\n        </CardDeck>\n    );\n\n    const noVehicleFoundInfo = (\n        <Card className={classes[\"noVehicle-card\"]}>\n            <h3>\n                Nu ati adaugat niciun vehicul.\n            </h3>\n        </Card>\n    );\n\n    const anonimMessage = vehicleId !== null && (\n        <InfoMessage\n            className={classes[\"anonim-message\"]}\n            onClick={handleAnonimMessageClose}\n            message=\"Puteti vedea doar ultimul vehicul adaugat deoarece folositi aplicatia in mod anonim.\"\n        />\n    );\n\n    return (\n        <div className={classes[\"vehicles-container\"]}>\n            {\n                (!props.loading && showAnonimMessage) && anonimMessage\n            }\n            {\n                props.loading ? <LoadingSpinner/>\n                    :\n                    props.vehicles.length > 0 ? vehicleList : noVehicleFoundInfo\n            }\n            {\n                props.role === 200 && props.vehicles.length <= 4 &&\n                <div className={classes[\"vehicles-actions\"]}>\n                    <FloatingButton onClick={handleAddVehicleClick}>\n                        <Plus color='var(--DarkBlue)'/>\n                    </FloatingButton>\n                </div>\n            }\n            {\n                showAddVehicle &&\n                <NewVehicle\n                    data={enteredLicensePlate}\n                    onChange={handleInputChange}\n                    onCloseClick={handleCloseClick}\n                    onAdd={handleVehicleAdd}/>\n            }\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userId: state.driverAuth.userId,\n        role: state.driverAuth.role,\n        loading: state.driverVehicles.loading,\n        error: state.driverVehicles.error,\n        vehicles: state.driverVehicles.vehicles,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDriverVehiclesFetch: (userId) => dispatch(actionCreators.fetchDriverVehicles(userId)),\n        onDriverVehicleDelete: (vehicleId) => dispatch(actionCreators.deleteDriverVehicle(vehicleId)),\n        onDriverVehicleAdd: (userId, vehicle) => dispatch(actionCreators.addDriverVehicle(userId, vehicle)),\n        onFetchVechicle: (vehicleId) => dispatch(actionCreators.fetchVehicle(vehicleId)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Vehicles);\n","import React, {useEffect} from 'react';\n\nimport classes from './ReservationsFilter.module.css';\nimport {connect} from \"react-redux\";\nimport * as actionCreators from \"../../../store/actions\";\n\nconst ReservationsFilter = props => {\n\n    const status = ['activa', 'progres', 'anulata', 'terminata']\n\n    const filterChangeHandler = (event) => {\n        props.onChangeFilter(event.target.value);\n    }\n\n    useEffect(() => {\n        if (props.role && props.role === 220) {\n            props.onFetchAllAreas();\n        }\n    }, [props.onFetchAllAreas]);\n\n    return (\n        <div className={classes['reservations-filter']}>\n            <div className={classes['reservations-filter__control']}>\n                <label>{props.role === 220 ? 'Zona de parcare' : 'Filtreaza dupa status'}</label>\n                <select value={props.selectedStatus} onChange={filterChangeHandler}>\n                    <option value='toate'>toate</option>\n                    {\n                        props.role === 220 && props.parkingAreas.length > 0 ?\n                            props.parkingAreas.map(area => (\n                                <option key={area.id} value={area.emplacement}>{area.emplacement}</option>\n                            )) :\n                            status.map((state, index) => (<option key={index}>{state}</option>))\n                    }\n                </select>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        role: state.driverAuth.role,\n        parkingAreas: state.parkingArea.parkingAreas,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchAllAreas: () => dispatch(actionCreators.fetchParkingAreas()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReservationsFilter);\n","import classes from './ReservationDate.module.css';\nimport * as format from '../../../utility/dateFormat';\n\nconst ReservationDate = props => {\n    const date = format.dateFormat(props.date).split('-');\n    const day = date[2];\n    const month = date[1];\n    const year = date[0];\n\n    return (\n        <div className={classes[\"reservation-date\"]}>\n            <div>{year}</div>\n            <div>{month}</div>\n            <div className={classes[\"reservation-date__day\"]}>{day}</div>\n        </div>\n    );\n}\n\nexport default ReservationDate;\n","import React from 'react';\n\nimport Card from \"../../UI/Card/Card\";\nimport ReservationDate from \"../ReservationDate/ReservationDate\";\n\nimport {Info, Trash2, X} from 'react-feather';\n\nimport classes from './Reservation.module.css';\nimport {Accordion, Col, Row} from \"react-bootstrap\";\nimport * as format from \"../../../utility/dateFormat\";\nimport * as actionCreators from \"../../../store/actions\";\nimport {connect} from \"react-redux\";\n\nconst Reservation = props => {\n\n    const showActions = props.role !== 220;\n\n    const handleCancelReservation = () => {\n        props.onCancelReservation(props.id);\n    }\n\n    const handleDeleteReservation = () => {\n        props.onDeleteReservation(props.id);\n    }\n\n    return (\n        <li>\n            <Accordion>\n                <Card className={classes[\"reservation\"]}>\n                    <ReservationDate date={props.date}/>\n                    <div className=\"d-flex flex-column\">\n                        <h2>{props.parkingArea.emplacement}</h2>\n                        <p>\n                            {format.timeFormat(props.startTime)} - {format.timeFormat(props.endTime)}\n                        </p>\n                    </div>\n\n                    <Accordion.Toggle as=\"button\" title=\"Informatii rezervare\" eventKey=\"0\">\n                        <Info/>\n                    </Accordion.Toggle>\n                </Card>\n\n                <Accordion.Collapse eventKey=\"0\" className={classes[\"reservation__info-collapse\"]}>\n                    <div>\n                        <Row className={classes[\"reservation__info\"]}>\n                            {\n                                props.role !== 220 &&\n                                <Col sm>\n                                    <p>Vehicul: {props.vehicle}</p>\n                                </Col>\n                            }\n                            <Col sm>\n                                <p>Status: {props.status}</p>\n                            </Col>\n                            <Col sm>\n                                <p>Pret total rezervare: {props.price} RON</p>\n                            </Col>\n                            <Col md={12} lg={12} sm={12} xs={12}>\n                                <p>Amplasament parcare: {props.parkingArea.emplacementLocation}</p>\n                            </Col>\n                        </Row>\n                        {\n                            showActions &&\n                            <div className={classes[\"reservation__actions\"]}>\n                                <button\n                                    title=\"Anuleaza\"\n                                    onClick={handleCancelReservation}\n                                    disabled={props.status === 'terminata' || props.status === 'anulata' || (((props.role === 200 || props.role === null) && props.status === 'progres') || (props.role === 210 && props.status !== 'progres'))}\n                                >\n                                    <X/>\n                                </button>\n                                {\n                                    (props.role === null || props.role === 200) &&\n                                    <button\n                                        title=\"Sterge\"\n                                        onClick={handleDeleteReservation}\n                                        disabled={props.status === 'activa' || props.status === 'progres'}\n                                    >\n                                        <Trash2/>\n                                    </button>\n                                }\n                            </div>\n                        }\n                    </div>\n                </Accordion.Collapse>\n            </Accordion>\n        </li>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userId: state.driverAuth.userId,\n        role: state.driverAuth.role,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCancelReservation: (reservationId) => dispatch(actionCreators.cancelReservation(reservationId)),\n        onDeleteReservation: (reservationId) => dispatch(actionCreators.deleteReservation(reservationId)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reservation);\n","import React from 'react';\nimport Reservation from \"../Reservation/Reservation\";\n\nimport classes from './ReservationsList.module.css';\nimport LoadingSpinner from \"../../UI/Loading/Loading\";\n\nconst ReservationsList = props => {\n    if (props.reservations.length === 0) {\n        return <h2 className={classes[\"reservations-list__fallback\"]}>\n            Nicio rezervare gasita.\n        </h2>\n    }\n    ;\n\n    return (\n        <React.Fragment>\n            {\n                props.loading ? <LoadingSpinner/> :\n\n                    <ul className={classes[\"reservations-list\"]}>\n                        {\n                            props.reservations.map((reservation) => (\n                                <Reservation\n                                    key={reservation.id}\n                                    id={reservation.id}\n                                    parkingArea={reservation.parkingArea}\n                                    startTime={reservation.startTime}\n                                    endTime={reservation.endTime}\n                                    date={reservation.reservationDate}\n                                    vehicle={reservation.vehicle && reservation.vehicle.licensePlate}\n                                    price={reservation.price}\n                                    status={props.getStatus(reservation.state)}\n                                />\n                            ))\n                        }\n                    </ul>\n            }\n        </React.Fragment>\n    );\n};\n\nexport default ReservationsList;\n","export const getReservationsPerMonth = (reservations, month)=> {\r\n    let monthReservations = reservations.filter(r=>{\r\n        return new Date(r.reservationDate).getMonth() === month\r\n    });\r\n    return monthReservations.length;\r\n};\r\n\r\nexport const getMonth = month => {\r\n    switch (month){\r\n        case 0:\r\n            return 'Ian';\r\n        case 1:\r\n            return 'Feb';\r\n        case 2:\r\n            return 'Mar';\r\n        case 3:\r\n            return 'Apr';\r\n        case 4:\r\n            return 'Mai';\r\n        case 5:\r\n            return 'Iun';\r\n        case 6:\r\n            return 'Iul';\r\n        case 7:\r\n            return 'Aug';\r\n        case 8:\r\n            return 'Sep';\r\n        case 9:\r\n            return 'Oct';\r\n        case 10:\r\n            return 'Noi';\r\n        default:\r\n            return 'Dec';\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport classes from './ReportsFilter.module.css';\r\nimport {Download, Printer} from \"react-feather\";\r\n\r\nconst ReportsFilter = props => {\r\n\r\n    const filterChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={classes['reports-filter']}>\r\n            <div className={` ${classes['reports-filter__control']}`}>\r\n                <label>Selectati anul</label>\r\n                <select value={props.selectedStatus} onChange={filterChangeHandler}>\r\n                    <option value='2020'>2020</option>\r\n                    <option value='2021'>2021</option>\r\n                </select>\r\n                {\r\n                    props.save &&\r\n                    <div className={classes[\"reportsFilter__actions\"]}>\r\n                        <button aria-label=\"Descarca\" title=\"Descarca\" onClick={props.onDownload}><Download/></button>\r\n                        <button aria-label=\"Printeaza\" title=\"Printeaza\" onClick={props.onPrint}><Printer/></button>\r\n                    </div>\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReportsFilter;\r\n","import React from 'react';\r\nimport Input from \"../../../UI/Input/Input\";\r\n\r\nconst VehicleFilter = (props) => {\r\n    return (\r\n        <div>\r\n            <Input\r\n                id=\"vehicleFilter\"\r\n                label=\"Cauta dupa nr. inmatriculare\"\r\n                type={\"text\"}\r\n                placeholder=\"Introduceti nr. inmatriculare\"\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VehicleFilter;\r\n","import React, {useEffect, useState} from 'react';\n\nimport Card from \"../../components/UI/Card/Card\";\nimport ReservationsFilter from \"../../components/Reservations/ReservationsFilter/ReservationsFilter\";\nimport ReservationsList from \"../../components/Reservations/ReservationsList/ReservationsList\";\n\nimport classes from './Reservations.module.css';\nimport {connect} from \"react-redux\";\nimport * as actionCreators from \"../../store/actions\";\nimport {Link} from \"react-router-dom\";\nimport {BarChart2, X} from \"react-feather\";\nimport InfoMessage from \"../../components/UI/InfoMessage/InfoMessage\";\nimport FloatingButton from \"../../components/UI/FloatingButton/FloatingButton\";\nimport ReservationsReports from \"../../components/Reservations/ReservationsReports/ReservationsReports\";\nimport VehicleFilter from \"../../components/Reservations/ReservationsFilter/VehicleFilter/VehicleFilter\";\n\nconst Reservations = (props) => {\n\n    const identifier = localStorage.getItem('identifier');\n    const [filteredStatus, setFilteredStatus] = useState('toate');\n    const [showAnonimMessage, setShowAnonimMessage] = useState(props.userId === null);\n    const [showReports, setShowReports] = useState(false);\n    const [filteredInput, setFilteredInput] = useState('');\n\n    useEffect(() => {\n        if (props.userId && props.role === 210 && props.user) {\n            props.onFetchAreaReservations(props.user.parkingArea.id);\n        }\n    }, [props.userId, props.role, props.user])\n\n    useEffect(() => {\n        if (props.userId && props.role) {\n            switch (props.role) {\n                case 210:\n                    props.onFetchAdminData(props.userId);\n                    break;\n                case 200:\n                    props.onfetchDriverReservations(props.userId);\n                    break;\n                case 220:\n                    props.onFetchAllReservations();\n                    break\n                default:\n                    break\n            }\n        }\n    }, [props.userId, props.role]);\n\n\n    useEffect(() => {\n        if (!props.userId) {\n            if (identifier) {\n                props.onFetchAnonimReservations(identifier);\n            }\n        }\n    }, [props.userId]);\n\n    const getReservationState = (state) => {\n        switch (state) {\n            case 100:\n                return 'activa';\n            case 110:\n                return 'progres';\n            case 120:\n                return 'anulata';\n            default:\n                return 'terminata';\n        }\n    };\n\n    const handleAnonimMessageClose = () => {\n        setShowAnonimMessage(false);\n    };\n\n    const filterChangeHandler = selectedStatus => {\n        setFilteredInput('');\n        setFilteredStatus(selectedStatus);\n    };\n\n    const filterInputChangeHandler = (event) => {\n        setFilteredInput(event.target.value)\n    }\n\n    const filteredReservations = (filteredStatus !== 'toate' || filteredInput !== '') ?\n        props.reservations.filter(reservation => {\n            if (props.role === 220) {\n                return reservation.parkingArea.emplacement === filteredStatus\n            } else {\n                if (filteredInput.length > 0) {\n                    return reservation.vehicle && reservation.vehicle.licensePlate.includes(filteredInput.toUpperCase());\n                } else {\n                    return getReservationState(reservation.state) === filteredStatus;\n                }\n            }\n        }) : props.reservations;\n\n    const handleShowReportsClick = () => {\n        setShowReports(!showReports);\n    }\n\n    const reservationsData = (\n        <div>\n            {\n                props.reservations && props.role === 210 &&\n                <Card className={classes[\"reservations__filter\"]}>\n                    <VehicleFilter value={filteredInput} onChange={filterInputChangeHandler}/>\n                </Card>\n            }\n            <Card className={classes[\"reservations__filter\"]}>\n                <ReservationsFilter selectedStatus={filteredStatus}\n                                    onChangeFilter={filterChangeHandler}/>}\n            </Card>\n            <ReservationsList\n                loading={props.loading}\n                getStatus={getReservationState}\n                reservations={filteredReservations}\n            />\n        </div>\n    );\n\n    const noReservationFoundInfo = (\n        <Card className={classes[\"noReservation-card\"]}>\n            <h3>\n                Nu exista rezervari.\n            </h3>\n            {\n                props.userId === null && props.reservations.length === 0 &&\n                <div className={classes[\"noReservation-actions\"]}>\n                    <p><Link to=\"/login\">Autentificati-va</Link> sau <Link to=\"/\">realizati o rezervare anonima</Link>.\n                    </p>\n                </div>\n            }\n        </Card>\n    );\n\n    const anonimMessage = identifier !== null && (\n        <InfoMessage className={classes[\"anonim-message\"]}\n                     onClick={handleAnonimMessageClose}\n                     message=\"Puteti vedea rezervarile pentru ultimul vehicul adaugat deoarece folositi aplicatia in mod anonim.\"\n        >\n            <p><Link to=\"/login\">Autentificati-va</Link> sau <Link to=\"/register\">inregistrati-va</Link> pentru a vedea\n                toate rezervarile.</p>\n        </InfoMessage>\n    );\n\n    return (\n        <div className={classes.reservations}>\n            {\n                (!props.loading && showAnonimMessage) && anonimMessage\n            }\n            {\n                (props.userId || identifier) && props.reservations.length > 0 ?\n                    (props.role !== 220 ? reservationsData :\n                        (showReports ? <ReservationsReports reservations={filteredReservations}\n                                                            area={filteredStatus}/> : reservationsData))\n                    :\n                    noReservationFoundInfo\n            }\n            {\n                props.role === 220 &&\n                <div className={classes[\"reservations-reports\"]}>\n                    <FloatingButton onClick={handleShowReportsClick}>\n                        {showReports ? <X color='var(--DarkBlue)'/> : <BarChart2 color='var(--DarkBlue)'/>}\n\n                    </FloatingButton>\n                </div>\n            }\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.reservations.loading,\n        error: state.reservations.error,\n        userId: state.driverAuth.userId,\n        role: state.driverAuth.role,\n        user: state.driverData.user,\n        reservations: state.reservations.reservations,\n        vehicles: state.driverVehicles.vehicles,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onfetchDriverReservations: (userId) => dispatch(actionCreators.fetchDriverReservations(userId)),\n        onCancelReservation: (userId, reservationId) => dispatch(actionCreators.cancelReservation(userId, reservationId)),\n        onFetchAnonimReservations: (vehicleId) => dispatch(actionCreators.fetchAnonimDriverReservations(vehicleId)),\n        onFetchAreaReservations: (areaId) => dispatch(actionCreators.fetchAreaReservations(areaId)),\n        onFetchAdminData: (userId) => dispatch(actionCreators.fetchAdminData(userId)),\n        onFetchAllReservations: () => dispatch(actionCreators.fetchAllReservations()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Reservations);\n","import React, {useEffect, useState} from \"react\";\r\n\r\nimport Card from '../../UI/Card/Card';\r\nimport Input from '../../UI/Input/Input';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nimport {ArrowLeft, Eye, EyeOff} from \"react-feather\";\r\n\r\nimport classes from \"./Register.module.css\";\r\nimport * as actionCreators from \"../../../store/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport * as validate from '../../../utility/validateHandler';\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\nimport Loading from \"../../UI/Loading/Loading\";\r\n\r\nconst Register = (props) => {\r\n    const history = useHistory();\r\n\r\n    const [userInput, setUserInput] = useState({\r\n        enteredName: \"\",\r\n        enteredEmail: props.role === 220 && props.selectedArea ? `admin_area${props.selectedArea.id}@easypark.com` : \"\",\r\n        enteredPhone: \"\",\r\n        enteredPassword: props.role === 220 && props.selectedArea ? `admin_area${props.selectedArea.id}` : \"\",\r\n        enteredVerifyPassword: props.role === 220 && props.selectedArea ? `admin_area${props.selectedArea.id}` : \"\",\r\n    });\r\n\r\n    const validateRules = {\r\n        enteredName: {\r\n            isRequired: true,\r\n        },\r\n        enteredEmail: {\r\n            isRequired: true,\r\n            isEmail: true,\r\n        },\r\n        enteredPhone: {\r\n            isRequired: true,\r\n            isPhoneNumber: true,\r\n        },\r\n        enteredPassword: {\r\n            isRequired: true,\r\n            minLength: 8,\r\n        },\r\n        enteredVerifyPassword: {\r\n            isRequired: true,\r\n            minLength: 8,\r\n        },\r\n    }\r\n\r\n    const [inputIsValid, setInputIsValid] = useState({\r\n        enteredName: null,\r\n        enteredEmail: null,\r\n        enteredPhone: null,\r\n        enteredPassword: null,\r\n    });\r\n\r\n    const [passwordIsVerified, setPasswordIsVerified] = useState(null);\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [showVerifyPassword, setShowVerifyPassword] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const identifier = setTimeout(() => {\r\n            if (props.role === 220) {\r\n                setFormIsValid(\r\n                    inputIsValid.enteredName && inputIsValid.enteredPhone\r\n                )\r\n            } else {\r\n                setFormIsValid(\r\n                    inputIsValid.enteredName && inputIsValid.enteredEmail && inputIsValid.enteredPhone && inputIsValid.enteredPassword && passwordIsVerified\r\n                );\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            clearTimeout(identifier);\r\n        };\r\n    }, [inputIsValid, passwordIsVerified]);\r\n\r\n    const handleInputChange = event => {\r\n        setUserInput((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                [event.target.name]: event.target.value\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleValidateUserInput = (event) => {\r\n        setInputIsValid((prevState => {\r\n            return {\r\n                ...prevState,\r\n                [event.target.name]:\r\n                    validate.checkValidity(event.target.value,\r\n                        validateRules[event.target.name]),\r\n            };\r\n        }));\r\n    };\r\n\r\n    const handleVerifyPassword = (event) => {\r\n        if (userInput.enteredPassword.length > 0) {\r\n            const isValid = userInput.enteredPassword === event.target.value;\r\n            setPasswordIsVerified(\r\n                validate.checkValidity(event.target.value, validateRules[event.target.name]) && isValid\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleShowPassword = (event) => {\r\n        event.preventDefault();\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleShowVerifyPassword = (event) => {\r\n        event.preventDefault();\r\n        setShowVerifyPassword(!showVerifyPassword);\r\n    };\r\n\r\n    const handleRegisterSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const user = {\r\n            name: userInput.enteredName,\r\n            email: userInput.enteredEmail,\r\n            phone: userInput.enteredPhone,\r\n            password: userInput.enteredPassword,\r\n        };\r\n\r\n        const driverData = {\r\n            user: user,\r\n        }\r\n\r\n        const adminData = {\r\n            user: user,\r\n            parkingAreaId: props.selectedArea.id,\r\n        }\r\n\r\n        if (formIsValid && !props.error) {\r\n            if (props.role === 220) {\r\n                props.onAdminRegister(adminData)\r\n                history.push('/parking-areas');\r\n            } else {\r\n                props.onDriverRegister(driverData);\r\n                history.push('/login');\r\n            }\r\n\r\n            setUserInput((prevState) => {\r\n                return {\r\n                    ...prevState,\r\n                    enteredName: '',\r\n                    enteredEmail: '',\r\n                    enteredPhone: '',\r\n                    enteredPassword: '',\r\n                    enteredVerifyPassword: '',\r\n                };\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    const registerData = (\r\n        <form>\r\n            {\r\n                props.role === 220 && props.selectedArea !== null &&\r\n                <Input\r\n                    id=\"parkingArea\"\r\n                    label=\"Zona de parcare\"\r\n                    type={\"text\"}\r\n                    placeholder=\"Zona de parcare\"\r\n                    value={props.selectedArea.emplacement}\r\n                    disabled={true}\r\n                />\r\n            }\r\n            <Input\r\n                id=\"name\"\r\n                label=\"Nume\"\r\n                type=\"text\"\r\n                placeholder=\"Introduceti numele\"\r\n                name=\"enteredName\"\r\n                value={userInput.enteredName}\r\n                isValid={inputIsValid.enteredName}\r\n                onChange={handleInputChange}\r\n                onBlur={handleValidateUserInput}\r\n            />\r\n            <Input\r\n                id=\"email\"\r\n                label=\"E-mail\"\r\n                type=\"email\"\r\n                placeholder=\"Introduceti adresa de e-mail\"\r\n                name=\"enteredEmail\"\r\n                value={userInput.enteredEmail}\r\n                isValid={inputIsValid.enteredEmail}\r\n                onChange={handleInputChange}\r\n                onBlur={handleValidateUserInput}\r\n                disabled={props.role === 220}\r\n            />\r\n            <Input\r\n                id=\"phone\"\r\n                label=\"Telefon\"\r\n                type=\"text\"\r\n                placeholder=\"Introduceti numarul de telefon\"\r\n                name=\"enteredPhone\"\r\n                value={userInput.enteredPhone}\r\n                isValid={inputIsValid.enteredPhone}\r\n                onChange={handleInputChange}\r\n                onBlur={handleValidateUserInput}\r\n            />\r\n            <div className={classes[\"user-password\"]}>\r\n                <Input\r\n                    id=\"password\"\r\n                    label=\"Parola\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    placeholder=\"Introduceti parola\"\r\n                    name=\"enteredPassword\"\r\n                    value={userInput.enteredPassword}\r\n                    isValid={inputIsValid.enteredPassword}\r\n                    onChange={handleInputChange}\r\n                    onBlur={handleValidateUserInput}\r\n                    disabled={props.role === 220}\r\n                >\r\n                    <button onClick={handleShowPassword} title=\"Arata parola\">\r\n                        {\r\n                            showPassword ? <EyeOff/> : <Eye/>\r\n                        }\r\n                    </button>\r\n                </Input>\r\n            </div>\r\n            <div className={classes[\"user-password\"]}>\r\n                <Input\r\n                    id=\"verifyPassword\"\r\n                    label=\"Verificare parola\"\r\n                    type={showVerifyPassword ? \"text\" : \"password\"}\r\n                    placeholder=\"Reintroduceti parola\"\r\n                    name=\"enteredVerifyPassword\"\r\n                    value={userInput.enteredVerifyPassword}\r\n                    isValid={passwordIsVerified}\r\n                    onChange={handleInputChange}\r\n                    onBlur={handleVerifyPassword}\r\n                    disabled={props.role === 220}\r\n                >\r\n                    <button onClick={handleShowVerifyPassword} title=\"Arata parola\">\r\n                        {\r\n                            showPassword ? <EyeOff/> : <Eye/>\r\n                        }\r\n                    </button>\r\n                </Input>\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <Button className=\"mt-3\" type=\"submit\" onClick={handleRegisterSubmit}>\r\n                    {props.role === 220 ? 'Adauga admin' : 'Inregistrare'}\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n    return (\r\n        <Card className={classes.register}>\r\n            <Link to={props.role === 220 ? \"/parking-areas\" : \"/login\"}>\r\n                <button title={props.role === 220 ? \"Inapoi la zonele de parcare\" : \"Mergi la autentificare\"}\r\n                        className={classes[\"go-back\"]}>\r\n                    <ArrowLeft/>\r\n                </button>\r\n            </Link>\r\n\r\n            <div className={`${classes[\"register-header\"]} d-flex flex-column text-center`}>\r\n                {\r\n                    props.loading ? <Loading/>\r\n                        : <div className={classes[\"login-header\"]}>\r\n                            <div>\r\n                                <img\r\n                                    src=\"/logo.png\"\r\n                                    alt=\"parking-logo\"\r\n                                    width=\"100\"\r\n                                    height=\"100\"\r\n                                />\r\n                            </div>\r\n                            <h2> {props.role === 220 ? 'Adauga admin' : 'Inregistrare'} </h2>\r\n                        </div>\r\n                }\r\n            </div>\r\n            {registerData}\r\n            {props.error && <Modal title=\"A aparut o eroare\" message={props.error.data} onConfirm={props.onErrorClose}/>}\r\n        </Card>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.driverAuth.loading,\r\n        error: state.driverAuth.error,\r\n        role: state.driverAuth.role,\r\n        selectedArea: state.parkingArea.selectedArea,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDriverRegister: (data) => dispatch(actionCreators.driverRegister(data)),\r\n        onAdminRegister: (data) => dispatch(actionCreators.adminRegister(data)),\r\n        onErrorClose: () => dispatch(actionCreators.updateError()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, {useEffect, useState} from 'react';\n\nimport Card from \"../../UI/Card/Card\";\nimport Input from \"../../UI/Input/Input\";\nimport Button from \"../../UI/Button/Button\";\n\nimport classes from './Login.module.css';\nimport {Link, useHistory} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport * as actionCreators from '../../../store/actions/index';\nimport Loading from \"../../UI/Loading/Loading\";\nimport {Eye, EyeOff} from \"react-feather\";\nimport Modal from \"../../UI/Modal/Modal\";\n\nconst Login = props => {\n    const history = useHistory();\n\n    useEffect(() => {\n        if (props.userId) {\n            if (props.role) {\n                switch (props.role) {\n                    case 210:\n                        history.push(\"/admin-dashboard\");\n                        break;\n                    case 220:\n                        history.push(\"/administrator-dashboard\");\n                        break;\n                    case 200:\n                        history.push(\"/profile\");\n                        break;\n                    default:\n                        break;\n                }\n            }\n        }\n    });\n\n    const [enteredEmail, setEnteredEmail] = useState(props.email ? props.email : '');\n    const [emailIsValid, setEmailIsValid] = useState();\n\n    const [enteredPassword, setEnteredPassword] = useState('');\n    const [showPassword, setShowPassword] = useState(false);\n    const [passwordIsValid, setPasswordIsValid] = useState();\n\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    useEffect(() => {\n        const identifier = setTimeout(() => {\n            setFormIsValid(\n                emailIsValid && passwordIsValid\n            );\n        }, 500);\n\n        return () => {\n            clearTimeout(identifier);\n        };\n    }, [emailIsValid, passwordIsValid]);\n\n    const handleEmailChange = event => {\n        setEnteredEmail(event.target.value);\n    };\n\n    const handlePasswordChange = event => {\n        setEnteredPassword(event.target.value);\n    };\n\n    const handleValidateEmail = () => {\n        setEmailIsValid(enteredEmail.length > 0 && enteredEmail.includes('@'));\n    };\n\n    const handleValidatePassword = () => {\n        setPasswordIsValid(enteredPassword.length > 0 && enteredPassword.trim().length > 8);\n    };\n\n    const handleLoginSubmit = (event) => {\n        event.preventDefault();\n\n        if (formIsValid) {\n            props.onAuth(enteredEmail, enteredPassword);\n        }\n    };\n\n    const handleShowPassword = (event) => {\n        event.preventDefault();\n        setShowPassword(!showPassword);\n    };\n\n    const authForm = (\n        <form onSubmit={handleLoginSubmit}>\n            <Input\n                id=\"email\"\n                label=\"E-mail\"\n                type=\"email\"\n                placeholder=\"johndoe@example.com\"\n                autocomplete=\"current-email\"\n                value={enteredEmail}\n                isValid={emailIsValid}\n                onChange={handleEmailChange}\n                onBlur={handleValidateEmail}\n            />\n            <div className={classes[\"user-password\"]}>\n                <Input\n                    id=\"password\"\n                    label=\"Password\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    placeholder=\"Introduceti parola\"\n                    autocomplete=\"current-password\"\n                    value={enteredPassword}\n                    isValid={passwordIsValid}\n                    onChange={handlePasswordChange}\n                    onBlur={handleValidatePassword}\n                >\n                    <button onClick={handleShowPassword} title=\"Arata parola\">\n                        {\n                            showPassword ? <EyeOff/> : <Eye/>\n                        }\n                    </button>\n                </Input>\n            </div>\n\n            <div className={`${classes[\"login-footer\"]} text-center`}>\n                <p>Utilizator nou? <Link to=\"/register\">Inregistrati-va aici.</Link></p>\n            </div>\n            <div className=\"text-center\">\n                <Button type=\"submit\" onClick={handleLoginSubmit}>\n                    Autentificare\n                </Button>\n            </div>\n        </form>\n    );\n\n    return (\n        <Card className={classes.login}>\n            {\n                props.loading ? <Loading/>\n                    : <div className={classes[\"login-header\"]}>\n                        <div>\n                            <img\n                                src=\"/logo.png\"\n                                alt=\"parking-logo\"\n                                width=\"100\"\n                                height=\"100\"\n                            />\n                        </div>\n                        <h2>Autentificare</h2>\n                    </div>\n            }\n            {authForm}\n            {props.error && <Modal title=\"A aparut o eroare\" message={props.error.data} onConfirm={props.onErrorClose}/>}\n        </Card>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.driverAuth.loading,\n        error: state.driverAuth.error,\n        userId: state.driverAuth.userId,\n        role: state.driverAuth.role,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (email, password) => dispatch(actionCreators.userAuth(email, password)),\n        getUserRole: (userId) => dispatch(actionCreators.getUserRole(userId)),\n        onErrorClose: () => dispatch(actionCreators.updateError()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useState } from 'react';\nimport { Card, Col, Row } from \"react-bootstrap\";\n\nimport classes from './DrivingLicense.module.css';\nimport Input from \"../../../UI/Input/Input\";\nimport { Check, X } from \"react-feather\";\nimport * as validate from '../../../../utility/validateHandler';\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../../../../store/actions\";\nimport * as date from '../../../../utility/dateFormat';\n\nconst DrivingLicense = props => {\n\n    const [isLicenseNumberValid, setIsLicenseNumberValid] = useState();\n    const [isLicenseDateValid, setIsLicenseDateValid] = useState();\n\n    const validateRules = {\n        enteredLicenseNumber: {\n            isRequired: true,\n            isLicenseNumber: true,\n        },\n        enteredExpirationDate: {\n            isRequired: true,\n            isExpirationDate: true,\n        }\n    }\n\n    const handleValidateNumber = (event) => {\n        setIsLicenseNumberValid(validate.checkValidity(\n            event.target.value,\n            validateRules.enteredLicenseNumber)\n        );\n    };\n\n    const handleValidateDate = (event) => {\n        setIsLicenseDateValid(validate.checkValidity(\n            event.target.value,\n            validateRules.enteredExpirationDate)\n        );\n    };\n\n    const handleSubmitLicense = (event) => {\n        event.preventDefault();\n\n        const license = {\n            number: props.licenseField.enteredLicenseNumber,\n            expirationDate: props.licenseField.enteredExpirationDate,\n        }\n\n        if (isLicenseNumberValid && isLicenseDateValid) {\n            props.onLicenseAdd(props.user.user.id, license);\n\n            props.onAddSuccess();\n        }\n    };\n\n    return (\n        <Card className={classes[\"license\"]}>\n            <Card.Header>\n                <Row>\n                    <Col md={2} xs={2}>\n                        <img\n                            src=\"https://image.flaticon.com/icons/png/512/330/330426.png\"\n                            alt=\"EU\"\n                            width=\"30\"\n                            height=\"30\"\n                        />\n                    </Col>\n                    <Col>\n                        <span>PERMIS DE CONDUCERE</span>\n                    </Col>\n                    <Col md={2} xs={2} className=\"text-end\">\n                        <span>RO</span>\n                    </Col>\n                </Row>\n            </Card.Header>\n            <Card.Body className={classes[\"license__body\"]}>\n                <div>\n                    {\n                        props.showEdit ?\n                            <Input\n                                id=\"enteredLicensePlate\"\n                                label=\"Numar:\"\n                                type=\"text\"\n                                placeholder=\"Numarul permisului de conducere\"\n                                name=\"enteredLicenseNumber\"\n                                isValid={isLicenseNumberValid}\n                                value={props.licenseField.enteredLicenseNumber}\n                                onChange={props.onLicenseChange}\n                                onBlur={handleValidateNumber}\n                            />\n                            :\n                            <Card.Text>Numar: <span> {props.user.license.number}</span></Card.Text>\n                    }\n                </div>\n                <div className={classes[\"license__valability\"]}>\n                    {\n                        props.showEdit ?\n                            <Input\n                                id=\"enteredExpirationDate\"\n                                label=\"Expira la:\"\n                                type=\"date\"\n                                name=\"enteredExpirationDate\"\n                                isValid={isLicenseDateValid}\n                                value={props.licenseField.enteredExpirationDate}\n                                onChange={props.onLicenseChange}\n                                onBlur={handleValidateDate}\n                            />\n                            :\n                            <Card.Text>Expira\n                                la: <span> {date.dateFormat(props.user.license.expirationDate)}</span></Card.Text>\n                    }\n                </div>\n            </Card.Body>\n            {\n                props.showAddActions &&\n                <Card.Footer className={classes[\"license-add_actions\"]}>\n                    <button title=\"Anuleaza\" onClick={props.onAddClose}><X /></button>\n                    <button title=\"Salveaza permis\" onClick={handleSubmitLicense}><Check /></button>\n                </Card.Footer>\n            }\n        </Card>\n    )\n};\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.driverData.loading,\n        error: state.driverData.error,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLicenseAdd: (driverId, license) => dispatch(actionCreators.addDriverLicense(driverId, license)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrivingLicense);\n","import React, { useState, useEffect } from 'react';\n\nimport classes from './DriverProfile.module.css';\nimport { Col, Row } from \"react-bootstrap\";\nimport { ArrowRight, Edit } from \"react-feather\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport DrivingLicense from \"./DrivingLicense/DrivingLicense\";\nimport Button from \"../../UI/Button/Button\";\nimport { connect } from 'react-redux';\nimport * as actionCreators from \"../../../store/actions\";\n\nconst DriverProfile = props => {\n    const history = useHistory();\n\n    useEffect(() => {\n        if (props.userId) {\n            if(props.role === 200) {\n                props.onFetchReservations(props.userId)\n            }\n        }\n    }, [])\n\n    const [showNewDrivingLicense, setShowNewDrivingLicense] = useState(false);\n\n    const reservationNumber = props.reservations ? props.reservations.length : 0;\n\n    const handleAddDrivingLicenseClick = () => {\n        setShowNewDrivingLicense(true);\n    };\n\n    const handleAddClose = () => {\n        setShowNewDrivingLicense(false);\n        props.onReset();\n    };\n\n    const handleAddSuccess = () => {\n        setShowNewDrivingLicense(false);\n        props.onReset();\n    }\n\n    const handleLogout = () => {\n        props.onDriverLogout();\n        props.onRemoveUserData();\n        history.push('/login');\n    }\n\n    return (\n        <React.Fragment>\n            <Row className=\"d-flex align-items-center\">\n                <Col md={3} className=\"text-center\">\n                    <img className=\"rounded\"\n                        src=\"/profile.png\"\n                        width=\"155\"\n                        height=\"155\"\n                        alt=\"poza de profil\"\n                    />\n                </Col>\n                <Col>\n                    <div className={classes.username}>\n                        <div className=\"d-flex flex-column\">\n                            <h4 className=\"mb-2\">\n                                {props.user && props.user.user.name}\n                            </h4>\n                            <span className=\"mt-2\">\n                                Email: {props.user && props.user.user.email}\n                            </span>\n                            <span className=\"mt-2\">\n                                Telefon: {props.user && props.user.user.phone}\n                            </span>\n                        </div>\n                        <button onClick={props.onEdit} title=\"Editeaza profilul\">\n                            <Edit />\n                        </button>\n                    </div>\n                    <Row className=\"mt-4 text-white\">\n                        <Col className={`d-flex flex-column ${classes[\"user-vehicles\"]}`}>\n                            <span>\n                                Vehicule\n                            </span>\n                            <Link to=\"/vehicles\"\n                                title=\"Vezi vehicule\"\n                            >\n                                {props.user ? props.user.vehicles.length : 0}\n                            </Link>\n                        </Col>\n                        <Col className={`d-flex flex-column ${classes[\"user-reservations\"]}`}>\n                            <span>\n                                Rezervari\n                            </span>\n                            <Link to=\"/reservations\"\n                                title=\"Vezi rezervari\"\n                            >\n                                {reservationNumber}\n                            </Link>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            {\n                !props.hasDrivingLicense && !showNewDrivingLicense ?\n                    <div className={classes[\"user-license__action\"]}>\n                        <Button onClick={handleAddDrivingLicenseClick}>Adauga permis de conducere</Button>\n                    </div>\n                    :\n                    <div className={classes[\"user-license\"]}>\n                        <DrivingLicense\n                            user={props.user}\n                            showEdit={showNewDrivingLicense}\n                            showAddActions={showNewDrivingLicense}\n                            onAddClose={handleAddClose}\n                            onAddSuccess={handleAddSuccess}\n                            licenseField={props.licenseField}\n                            onLicenseChange={props.onLicenseChange}\n                        />\n                    </div>\n            }\n            <div className={classes[\"user-logout\"]}>\n                <Button onClick={handleLogout}>\n                    Iesi din cont <ArrowRight />\n                </Button>\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        userId: state.driverAuth.userId,\n        role: state.driverAuth.role,\n        reservations: state.reservations.reservations,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDriverLogout: () => dispatch(actionCreators.authLogout()),\n        onRemoveUserData: () => dispatch(actionCreators.removeUserData()),\n        onFetchReservations: (userId) => dispatch(actionCreators.fetchDriverReservations(userId)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DriverProfile);\n","import React, {useState} from 'react';\nimport Input from \"../../../UI/Input/Input\";\nimport {Check, Edit, Eye, EyeOff} from \"react-feather\";\n\nimport classes from './EditProfile.module.css';\nimport Header from \"../../../UI/Header/Header\";\nimport DrivingLicense from \"../DrivingLicense/DrivingLicense\";\nimport * as validate from \"../../../../utility/validateHandler\";\nimport * as actionCreators from \"../../../../store/actions\";\nimport {connect} from \"react-redux\";\nimport {useHistory} from 'react-router-dom';\nimport Modal from \"../../../UI/Modal/Modal\";\n\nconst EditProfile = props => {\n    const history=useHistory();\n\n    const [userInput, setUserInput] = useState({\n        email: props.user.user.email,\n        phone: props.user.user.phone,\n        newPassword: '',\n    });\n\n    const [inputIsValid, setInputIsValid] = useState({\n        email: true,\n        phone: true,\n        newPassword: true,\n    });\n\n    const validateRules = {\n        email: {\n            isRequired: true,\n            isEmail: true,\n        },\n        phone: {\n            isRequired: true,\n            isPhoneNumber: true,\n        },\n    };\n\n    const [enableModifyPassword, setEnableModifyPassword] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleShowPassword = (event) => {\n        event.preventDefault();\n        setShowPassword(!showPassword);\n    };\n\n    const handleModifyPassword = (event) => {\n        event.preventDefault();\n        setEnableModifyPassword(!enableModifyPassword);\n    };\n\n    const handleInputChange = (event) => {\n        setUserInput((prevState) => {\n            return {\n                ...prevState,\n                [event.target.name]: event.target.value\n            };\n        });\n    };\n\n    const handleValidateUserInput = (event) => {\n        setInputIsValid((prevState => {\n            return {\n                ...prevState,\n                [event.target.name]:\n                    validate.checkValidity(event.target.value,\n                        validateRules[event.target.name]),\n            };\n        }));\n    };\n\n    const handleEditSubmit = (event) => {\n        event.preventDefault();\n        const driverUpdateData = {\n            id: props.userId,\n            user: {\n                id: props.user.user.id,\n                name: props.user.user.name,\n                email: userInput.email,\n                phone: userInput.phone,\n                password: userInput.newPassword\n            },\n            license: {\n                id: props.user.license.id,\n                number: props.licenseField.enteredLicenseNumber ? props.licenseField.enteredLicenseNumber : props.user.license.number,\n                expirationDate: props.licenseField.enteredExpirationDate ? props.licenseField.enteredExpirationDate : props.user.license.expirationDate,\n            },\n        };\n\n        if (inputIsValid.email && inputIsValid.phone && inputIsValid.newPassword) {\n            props.onDriverUpdate(props.userId, driverUpdateData);\n\n            if (userInput.newPassword.length > 0 && inputIsValid.newPassword) {\n                props.onDriverLogout();\n                history.push(\"/login\");\n            }\n            props.onClose();\n        }\n    }\n\n    return (\n        <React.Fragment>\n            <Header title={`Editeaza profilul pentru ${props.user.user.name}`} onCloseClick={props.onClose}/>\n            <form>\n                <Input\n                    id=\"enteredEmail\"\n                    label=\"E-mail\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholde=\"Introduceti noua adresa de e-mail\"\n                    isValid={inputIsValid.email}\n                    value={userInput.email}\n                    onChange={handleInputChange}\n                    onBlur={handleValidateUserInput}\n                />\n                <Input\n                    id=\"enteredPhone\"\n                    label=\"Numar de telefon\"\n                    type=\"text\"\n                    name=\"phone\"\n                    placeholde=\"Introduceti noul numar de telefon\"\n                    isValid={inputIsValid.phone}\n                    value={userInput.phone}\n                    onChange={handleInputChange}\n                    onBlur={handleValidateUserInput}\n                />\n                <div className={classes[\"user-password\"]}>\n                    <Input\n                        id=\"enteredPassword\"\n                        label=\"Parola\"\n                        type={showPassword ? \"text\" : \"password\"}\n                        name=\"newPassword\"\n                        placeholder=\"Introduceti noua parola\"\n                        disabled={!enableModifyPassword}\n                        isValid={inputIsValid.newPassword}\n                        value={userInput.newPassword}\n                        onChange={handleInputChange}\n                    >\n                        <button onClick={handleShowPassword} title=\"Arata parola\">\n                            {\n                                showPassword ? <EyeOff/> : <Eye/>\n                            }\n                        </button>\n                        <button onClick={handleModifyPassword} title=\"Modifica parola\">\n                            {\n                                enableModifyPassword ? <Check/> : <Edit/>\n                            }\n                        </button>\n                    </Input>\n                </div>\n                {\n                    props.hasDrivingLicense &&\n                    <div className={classes[\"user-license\"]}>\n                        <DrivingLicense\n                            showEdit={props.showEdit}\n                            user={props.user}\n                            licenseField={props.licenseField}\n                            onLicenseChange={props.onLicenseChange}\n                        />\n                    </div>\n                }\n            </form>\n            <div className={classes[\"edit-profile__actions\"]}>\n                <button onClick={handleEditSubmit} title=\"Salveaza modificarile\">\n                    <Check/>\n                </button>\n            </div>\n            {\n                props.error && <Modal title=\"Date incorecte\" message={props.error.data} onConfirm={props.onErrorClose}/>\n            }\n        </React.Fragment>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.driverData.loading,\n        error: state.driverData.error,\n        userId: state.driverAuth.userId,\n        driver: state.driverData.user,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDriverUpdate: (driverId, driverUpdateData) => dispatch(actionCreators.updateDriver(driverId, driverUpdateData)),\n        onFetchDriverData: (driverId) => dispatch(actionCreators.fetchDriverData(driverId)),\n        onDriverLogout: () => dispatch(actionCreators.authLogout()),\n        onErrorClose: () => dispatch(actionCreators.updateError()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditProfile);\n","import React, { useEffect, useState } from 'react';\nimport Card from \"../../../components/UI/Card/Card\";\nimport DriverProfile from \"../../../components/Profile/Driver/DriverProfile\";\nimport EditProfile from \"../../../components/Profile/Driver/EditProfile/EditProfile\";\nimport * as actionCreators from \"../../../store/actions\";\nimport { connect } from \"react-redux\";\nimport LoadingSpinner from \"../../../components/UI/Loading/Loading\";\nimport classes from \"../WrapperCard.module.css\";\n\nconst Driver = props => {\n\n    useEffect(() => {\n        if (props.userId) {\n            switch (props.role) {\n                case 210:\n                    props.onFetchAdminData(props.userId);\n                    break;\n                case 200:\n                    props.onFetchDriverData(props.userId);\n                    break;\n                default:\n                    break;\n            }\n        }\n    }, [props.userId, props.role]);\n\n    const [showEditFields, setShowEditFields] = useState(false);\n\n    const [userLicenseInput, setUserLicenseInput] = useState({\n        enteredLicenseNumber: props.user ? props.user.license && props.user.license.number : '',\n        enteredExpirationDate: props.user ? props.user.license && props.user.license.expirationDate : '',\n    });\n\n    const handleInputChange = (event) => {\n        setUserLicenseInput((prevState) => {\n            return {\n                ...prevState,\n                [event.target.name]: event.target.value\n            };\n        });\n    };\n\n    const hasDrivingLicense = props.user ? (!!props.user.license) : false;\n\n    const handleEditClick = () => {\n        setShowEditFields(true);\n    };\n\n    const handleEditClose = () => {\n        setShowEditFields(false);\n    };\n\n    const handleResetLicenseInput = () => {\n        setUserLicenseInput(prevState => {\n            return {\n                ...prevState,\n                enteredLicenseNumber: '',\n                enteredExpirationDate: '',\n            };\n        });\n    };\n\n    const profile = (\n        <DriverProfile\n            user={props.user}\n            hasDrivingLicense={hasDrivingLicense}\n            licenseField={userLicenseInput}\n            onEdit={handleEditClick}\n            onLicenseChange={handleInputChange}\n            onDriverLogout={props.onDriverLogout}\n            onReset={handleResetLicenseInput}\n        />\n    );\n\n    const editProfile = (\n        <EditProfile\n            user={props.user}\n            hasDrivingLicense={hasDrivingLicense}\n            onClose={handleEditClose}\n            showEdit={showEditFields}\n            licenseField={userLicenseInput}\n            onLicenseChange={handleInputChange}\n        />\n    );\n\n    return (\n        <div className=\"container mt-4 mb-4 d-flex justify-content-center\">\n            {\n                props.loading ?\n                    <LoadingSpinner />\n                    :\n                    <Card className={classes[\"user-card\"]}>\n                        {\n                            props.userId && (showEditFields ? editProfile : profile)\n                        }\n                    </Card>\n            }\n        </div>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.driverData.loading,\n        error: state.driverData.error,\n        user: state.driverData.user,\n        userId: state.driverAuth.userId,\n        role: state.driverAuth.role,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDriverLogout: () => dispatch(actionCreators.authLogout()),\n        onFetchDriverData: (userId) => dispatch(actionCreators.fetchDriverData(userId)),\n        onFetchAdminData: (userId) => dispatch(actionCreators.fetchAdminData(userId)),\n        getUserRole: (userId) => dispatch(actionCreators.getUserRole(userId)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Driver);\n","import React, {useState} from 'react';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport Button from \"../../UI/Button/Button\";\r\nimport {ArrowRight, Eye, EyeOff, Key} from \"react-feather\";\r\n\r\nimport classes from './Header.module.css';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport * as actionCreators from \"../../../store/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport Modal from \"../../UI/Modal/Modal\";\r\nimport Input from \"../../UI/Input/Input\";\r\nimport * as validate from \"../../../utility/validateHandler\";\r\n\r\nfunction ProfileHeader(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const [changePassword, setChangePassword] = useState(false);\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [enteredPassword, setEnteredPassword] = useState('');\r\n    const [passwordIsValid, setPasswordIsValid] = useState();\r\n\r\n    const validateRules = {\r\n        enteredPassword: {\r\n            isRequired: true,\r\n            minLength: 8,\r\n        },\r\n    }\r\n\r\n    const handleChangePasswordClick = () => {\r\n        setChangePassword(true);\r\n    }\r\n\r\n    const handleChangePasswordClose = () => {\r\n        setChangePassword(false);\r\n    }\r\n\r\n    const handleShowPassword = (event) => {\r\n        event.preventDefault();\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setEnteredPassword(event.target.value);\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        props.onLogout();\r\n        props.onRemoveUserData();\r\n        history.push('/login');\r\n    }\r\n\r\n    const handleValidateUserInput = (event) => {\r\n        setPasswordIsValid(validate.checkValidity(event.target.value, validateRules[\"enteredPassword\"]));\r\n    };\r\n\r\n    const handleUpdateUserPassword = () => {\r\n\r\n        const data = {\r\n            id: props.user.id,\r\n            name: props.user.name,\r\n            email: props.user.email,\r\n            phone: props.user.phone,\r\n            role: props.user.role,\r\n            password: enteredPassword,\r\n        }\r\n\r\n        if (enteredPassword.length > 0) {\r\n\r\n            props.onUpdatePassword(props.user.id, data);\r\n            handleLogout();\r\n        } else {\r\n            handleChangePasswordClose();\r\n        }\r\n    }\r\n\r\n    console.log(props.user)\r\n\r\n    return (\r\n        <Row className=\"d-flex text-center align-items-center\">\r\n            <Col md={3}>\r\n                <img className=\"rounded\"\r\n                     src={props.profilePicture}\r\n                     width=\"155\"\r\n                     height=\"155\"\r\n                     alt=\"poza de profil\"\r\n                />\r\n            </Col>\r\n            <Col>\r\n                <div className={classes[\"profile-header\"]}>\r\n                    <h2>{props.header}</h2>\r\n                    <span className=\"mt-4\">\r\n                        Email: {props.user && props.user.email}\r\n                    </span>\r\n                    <span className=\"mt-2\">\r\n                        Telefon: {props.user && props.user.phone}\r\n                    </span>\r\n                    <button aria-label=\"Modifica parola\" title=\"Modifica parola\" onClick={handleChangePasswordClick}>\r\n                        <Key/></button>\r\n                    <div className=\"mt-4\">\r\n                        <Button onClick={handleLogout}>\r\n                            Iesi din cont <ArrowRight/>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n            {\r\n                changePassword &&\r\n                <Modal title=\"Modifica parola\"\r\n                       message=\"Introduceti noua parola\"\r\n                       cancel={true}\r\n                       onCancel={handleChangePasswordClose}\r\n                       onConfirm={handleUpdateUserPassword}\r\n                >\r\n                    <div className={classes[\"user-password\"]}>\r\n                        <Input\r\n                            id=\"password\"\r\n                            label=\"Parola\"\r\n                            type={showPassword ? \"text\" : \"password\"}\r\n                            placeholder=\"Introduceti noua parola\"\r\n                            name=\"enteredPassword\"\r\n                            value={enteredPassword}\r\n                            isValid={passwordIsValid}\r\n                            onChange={handleInputChange}\r\n                            onBlur={handleValidateUserInput}\r\n                        >\r\n                            <button onClick={handleShowPassword} title=\"Arata parola\">\r\n                                {\r\n                                    showPassword ? <EyeOff/> : <Eye/>\r\n                                }\r\n                            </button>\r\n                        </Input>\r\n                    </div>\r\n                </Modal>\r\n            }\r\n        </Row>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actionCreators.authLogout()),\r\n        onRemoveUserData: () => dispatch(actionCreators.removeUserData()),\r\n        onUpdatePassword: (userId, data) => dispatch(actionCreators.updateUserPassword(userId, data)),\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ProfileHeader);\r\n","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actionCreators from \"../../../store/actions\";\r\nimport {Card, Col, Row} from \"react-bootstrap\";\r\nimport classes from './AdminProfile.module.css';\r\nimport LoadingSpinner from \"../../UI/Loading/Loading\";\r\nimport {Link} from \"react-router-dom\";\r\nimport * as dataUtility from '../../../utility/dataUtility';\r\nimport Header from \"../Header/Header\";\r\n\r\nconst AdminProfile = props => {\r\n\r\n    useEffect(() => {\r\n        if (props.userId) {\r\n            if (props.role && props.role === 210) {\r\n                props.onFetchAdminData(props.userId);\r\n            }\r\n        }\r\n    }, [props.userId, props.role]);\r\n\r\n    useEffect(() => {\r\n        if (props.userId) {\r\n            if (props.user && props.role === 210) {\r\n                props.onFetchAreaReservations(props.user.parkingArea.id)\r\n            }\r\n        }\r\n    }, [props.userId, props.role, props.user]);\r\n\r\n    const activeReservations = props.reservations && dataUtility.getNumberOfReservatiosn(props.reservations, 100);\r\n    const progresReservations = props.reservations && dataUtility.getNumberOfReservatiosn(props.reservations, 110);\r\n    const canceledReservations = props.reservations && dataUtility.getNumberOfReservatiosn(props.reservations, 120);\r\n    const finishedReservations = props.reservations && dataUtility.getNumberOfReservatiosn(props.reservations, 130);\r\n\r\n\r\n    const dashboard = (\r\n        <div>\r\n            <Header profilePicture=\"/profile.png\" user={props.user && props.user.user} header=\"Panou admin\"/>\r\n\r\n            <div className={classes[\"admin-area__note\"]}>\r\n                <p>Zona de parcare aflata in administrare:</p>\r\n            </div>\r\n            <Card className={classes[\"admin-area\"]}>\r\n                <Card.Header className=\"text-center\">\r\n                    <h3>{props.user && props.user.parkingArea.emplacement}</h3>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className={classes[\"admin-area-info\"]}>\r\n                        <div>\r\n                            <strong>Localizare amplasament: </strong>\r\n                            <span>{props.user && props.user.parkingArea.emplacementLocation}</span>\r\n                        </div>\r\n                        <div>\r\n                            <strong>Zona: </strong>\r\n                            <span>{props.user && dataUtility.getAreaZone(props.user.parkingArea.pricePerHour)}</span>\r\n                        </div>\r\n                        <div>\r\n                            <strong>Capacitate totala: </strong>\r\n                            <span>{props.user && props.user.parkingArea.totalSpots} locuri</span>\r\n                        </div>\r\n                        <div>\r\n                            <strong>Locuri disponibile: </strong>\r\n                            <span>{props.user && props.user.parkingArea.availableSpots}</span>\r\n                        </div>\r\n                    </div>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <div className={classes[\"area-reservations\"]}>\r\n                        <p>\r\n                            <Link to=\"/reservations\" title=\"Vezi rezervari\">REZERVARI</Link>\r\n                        </p>\r\n                        <Row className=\"text-start\">\r\n                            <Col sm>\r\n                                <p>active: {activeReservations}</p>\r\n                            </Col>\r\n                            <Col sm>\r\n                                <p>in progres: {progresReservations}</p>\r\n                            </Col>\r\n                            <Col sm>\r\n                                <p>anulate: {canceledReservations}</p>\r\n                            </Col>\r\n                            <Col sm>\r\n                                <p>finalizate: {finishedReservations}</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                (props.loading === true && props.loadingReservations === true) ? <LoadingSpinner/> : dashboard\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.driverData.loading,\r\n        error: state.driverData.error,\r\n        user: state.driverData.user,\r\n        userId: state.driverAuth.userId,\r\n        role: state.driverAuth.role,\r\n        reservations: state.reservations.reservations,\r\n        loadingReservations: state.reservations.loading\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchAdminData: (userId) => dispatch(actionCreators.fetchAdminData(userId)),\r\n        onFetchAreaReservations: (areaId) => dispatch(actionCreators.fetchAreaReservations(areaId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminProfile);\r\n","import React from 'react';\r\nimport Card from \"../../../components/UI/Card/Card\";\r\nimport classes from \"../WrapperCard.module.css\";\r\nimport AdminProfile from \"../../../components/Profile/Admin/AdminProfile\";\r\n\r\nconst Admin = () => {\r\n\r\n    return (\r\n        <div className=\"container mt-4 mb-4 justify-content-center\">\r\n            <Card className={classes[\"user-card\"]}>\r\n                <AdminProfile/>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Admin;\r\n","import React, {useEffect} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport * as actionCreators from \"../../../store/actions\";\r\nimport LoadingSpinner from \"../../UI/Loading/Loading\";\r\nimport Header from \"../Header/Header\";\r\n\r\nimport classes from './Administrator.module.css';\r\nimport {Col, Row} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst AdministratorProfile = (props) => {\r\n    useEffect(() => {\r\n        if (props.userId) {\r\n            if (props.role && props.role === 220) {\r\n                props.onFetchAdministratorData(props.userId);\r\n            }\r\n        }\r\n    }, [props.userId, props.role]);\r\n\r\n    useEffect(() => {\r\n        if (props.userId) {\r\n            if (props.user && props.role === 220) {\r\n                props.onFetchAllAreas();\r\n            }\r\n        }\r\n    }, [props.userId, props.role, props.user]);\r\n\r\n    const dashboard = (\r\n        <div>\r\n            <Row>\r\n                <Col>\r\n                    <Header profilePicture=\"/administrator.png\" user={props.user} header=\"Panou administrator\"/>\r\n                </Col>\r\n                <Col md={3} className=\"m-auto\">\r\n\r\n                    <div className={classes[\"administrator-areas__no\"]}>\r\n                        <Link to=\"/parking-areas\">\r\n                            <p>{props.parkingAreas && props.parkingAreas.length}</p>\r\n                        </Link>\r\n                        <div>zone administrate</div>\r\n                    </div>\r\n\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.loading === true ? <LoadingSpinner/> : dashboard\r\n            }\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.driverData.loading,\r\n        error: state.driverData.error,\r\n        user: state.driverData.user,\r\n        userId: state.driverAuth.userId,\r\n        role: state.driverAuth.role,\r\n        parkingAreas: state.parkingArea.parkingAreas,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchAdministratorData: (userId) => dispatch(actionCreators.fetchAdministratorData(userId)),\r\n        onFetchAllAreas: () => dispatch(actionCreators.fetchParkingAreas()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdministratorProfile);\r\n","import React from 'react';\r\nimport Card from \"../../../components/UI/Card/Card\";\r\nimport classes from \"../WrapperCard.module.css\";\r\nimport AdministratorProfile from \"../../../components/Profile/Administrator/Administrator\";\r\n\r\nconst Administrator = () => {\r\n\r\n    return (\r\n        <div className=\"container mt-4 mb-4 justify-content-center\">\r\n            <Card className={classes[\"user-card\"]}>\r\n                <AdministratorProfile/>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Administrator;\r\n","import React from 'react';\r\nimport './PageNotFound.module.css';\r\n\r\nclass PageNotFound extends React.Component {\r\n    //TODO\r\n    render() {\r\n        return (\r\n            <div className=\"container w-100 h-100 text-center\">\r\n               <h1>Pagina nu exista.</h1>\r\n            </div >\r\n        );\r\n    };\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React, {useEffect, useState} from 'react';\r\nimport * as actionCreators from \"../../store/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport LoadingSpinner from \"../UI/Loading/Loading\";\r\nimport * as utility from '../../utility/dataUtility';\r\n\r\nimport classes from './ParkingAreas.module.css'\r\nimport {Plus} from \"react-feather\";\r\nimport Input from \"../UI/Input/Input\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst ParkingAreasContainer = (props) => {\r\n    const history = useHistory();\r\n\r\n    const [userInputSearch, setUserInputSearch] = useState('');\r\n\r\n    const handleUserInputChange = event => {\r\n        setUserInputSearch(event.target.value);\r\n    }\r\n\r\n    const handleAddAdminClick = (area) => {\r\n        props.onSelectArea(area);\r\n        history.push('/register')\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.onFetchAllAreas();\r\n    }, [props.onFetchAllAreas]);\r\n\r\n    const filteredAreas = props.parkingAreas.length > 0 && props.parkingAreas.filter(\r\n        area => (\r\n            area.emplacement.toLowerCase().includes(userInputSearch.toLowerCase()) ||\r\n            area.emplacementLocation.toLowerCase().includes(userInputSearch.toLowerCase()) ||\r\n            area.city.toLowerCase().includes(userInputSearch.toLowerCase())\r\n        ));\r\n\r\n    const searchArea = (\r\n        <Input\r\n            id=\"search\"\r\n            className={classes.control}\r\n            label=\"Cautati o zona de parcare\"\r\n            type=\"text\"\r\n            placeholder=\"Introduceti o adresa\"\r\n            value={userInputSearch}\r\n            onChange={handleUserInputChange}\r\n        />\r\n    );\r\n\r\n    const parkingAreasData = (\r\n        <table>\r\n            <thead>\r\n            <tr>\r\n                <th>Amplasament</th>\r\n                <th>Zona</th>\r\n                <th>Responsabil</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody className={classes[\"area-info\"]}>\r\n            {\r\n                filteredAreas.length > 0 && filteredAreas.map(area => (\r\n                    <tr key={area.id}>\r\n                        <td>{area.emplacement}</td>\r\n                        <td>{utility.getAreaZone(area.pricePerHour)}</td>\r\n                        <td>\r\n                            {\r\n                                area.admin !== null ? area.admin.user.name :\r\n                                    <button title=\"Adauga admin\"\r\n                                            onClick={() => {\r\n                                                handleAddAdminClick(area)\r\n                                            }}\r\n                                    >\r\n                                        Adauga <Plus/>\r\n                                    </button>\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                ))\r\n            }\r\n            </tbody>\r\n        </table>\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.loading ? <LoadingSpinner/> :\r\n                    <div className={classes.areas}>\r\n                        <h2 className=\"text-center\">Zone de parcare de utilitate publica (cu plata) - Bucuresti</h2>\r\n                        {searchArea}\r\n                        {parkingAreasData}\r\n                    </div>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.parkingArea.loading,\r\n        error: state.parkingArea.error,\r\n        parkingAreas: state.parkingArea.parkingAreas,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchAdministratorData: (userId) => dispatch(actionCreators.fetchAdministratorData(userId)),\r\n        onFetchAllAreas: () => dispatch(actionCreators.fetchParkingAreas()),\r\n        onSelectArea: (area) => dispatch(actionCreators.fetchAreaSuccess(area)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ParkingAreasContainer);\r\n","import React from 'react';\r\nimport ParkingAreasContainer from \"../../components/ParkingAreas/ParkingAreas\";\r\nimport Card from \"../../components/UI/Card/Card\";\r\nimport classes from \"./ParkingAreas.module.css\";\r\n\r\nconst ParkingAreas = () => {\r\n\r\n    return (\r\n        <div className=\"container mt-4 mb-4 justify-content-center\">\r\n            <Card className={classes[\"areas-card\"]}>\r\n                <ParkingAreasContainer/>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ParkingAreas;\r\n","import {Route, Switch, withRouter} from 'react-router-dom';\n\nimport Home from './pages/Home/Home';\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Vehicles from \"./pages/Vehicles/Vehicles\";\nimport Reservations from \"./pages/Reservations/Reservations\";\nimport Register from './components/Auth/Register/Register';\nimport {connect} from \"react-redux\";\nimport * as actionsCreators from './store/actions/index';\nimport {useEffect} from \"react\";\nimport Login from \"./components/Auth/Login/Login\";\nimport Profile from \"./pages/Profile/Driver/Driver\";\nimport * as actionCreators from \"./store/actions\";\nimport Admin from \"./pages/Profile/Admin/Admin\";\nimport Administrator from \"./pages/Profile/Administrator/Administrator\";\nimport PageNotFound from \"./components/PageNotFound/PageNotFound\";\nimport ParkingAreas from \"./pages/ParkingAreas/ParkingAreas\";\n\nfunction App(props) {\n\n    useEffect(() => {\n        props.onTryDriverAutoSignin();\n    });\n\n    useEffect(() => {\n        if (props.userId) {\n            props.getUserRole(props.userId);\n        }\n    }, [props]);\n\n    return (\n        <div>\n            <Navigation/>\n            <Switch>\n                <Route exact path=\"/\"><Home/></Route>\n                {\n                    props.role !== 210 && <Route exact path=\"/register\"><Register/></Route>\n                }\n                <Route exact path=\"/login\"><Login/></Route>\n                {\n                    props.role === 200 && <Route exact path=\"/profile\"><Profile/></Route>\n                }\n                {\n                    props.role === 210 && <Route exact path=\"/admin-dashboard\"><Admin/></Route>\n                }\n                {\n                    props.role === 220 && <Route exact path=\"/administrator-dashboard\"><Administrator/></Route>\n                }\n                {\n                    props.role === 220 && <Route exact path=\"/parking-areas\"><ParkingAreas/></Route>\n                }\n                <Route exact path=\"/reservations\"><Reservations/></Route>\n                <Route exact path=\"/vehicles\"><Vehicles/></Route>\n                <Route component={PageNotFound} />\n            </Switch>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        userId: state.driverAuth.userId,\n        role: state.driverAuth.role,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onTryDriverAutoSignin: () => dispatch(actionsCreators.authCheckState()),\n        getUserRole: (userId) => dispatch(actionCreators.getUserRole(userId)),\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","export const updateObject = (oldObject, updatedValues) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedValues\r\n    }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from \"../utility\";\r\n\r\nconst initialState = {\r\n    userId: localStorage.getItem(\"userId\"),\r\n    email: null,\r\n    error: null,\r\n    loading: false,\r\n    role: null,\r\n};\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true\r\n    });\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, {\r\n        userId: null,\r\n        role: null,\r\n    });\r\n};\r\n\r\nconst registerSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        email: action.email,\r\n        error: null,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst userRoleSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        role: action.role,\r\n        error: null,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst updateError = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n    });\r\n}\r\n\r\nconst driverAuthReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state, action);\r\n        case actionTypes.REGISTER_SUCCESS:\r\n            return registerSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state, action);\r\n        case actionTypes.USER_ROLE_SUCCESS:\r\n            return userRoleSuccess(state, action);\r\n        case actionTypes.UPDATE_ERROR_SUCCESS:\r\n            return updateError(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default driverAuthReducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport {updateObject} from \"../utility\";\r\n\r\nconst initialState = {\r\n    user: null,\r\n    error: null,\r\n    loading: false,\r\n};\r\n\r\nconst fetchUserDataStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true,\r\n    });\r\n};\r\n\r\nconst fetchUserDataSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        user: action.user,\r\n        error: null,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst fetchUserDataFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst addDriverLicenseSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: false,\r\n        user: updateObject(state.user, {\r\n            license: action.license,\r\n        }),\r\n    });\r\n};\r\n\r\nconst driverUpdateSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: false,\r\n        user: action.driver,\r\n    });\r\n};\r\n\r\nconst removeUserDataSucces = (state, action) => {\r\n    return updateObject(state, {\r\n            user: null,\r\n        }\r\n    );\r\n};\r\n\r\nconst updateError = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n    });\r\n}\r\n\r\nconst updateUserPasswordSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: null,\r\n    });\r\n}\r\n\r\nconst userDataReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_USER_DATA_START:\r\n            return fetchUserDataStart(state, action);\r\n        case actionTypes.FETCH_USER_DATA_SUCCESS:\r\n            return fetchUserDataSuccess(state, action);\r\n        case actionTypes.FETCH_USER_DATA_FAIL:\r\n            return fetchUserDataFail(state, action);\r\n        case actionTypes.ADD_DRIVER_LICENSE_SUCCESS:\r\n            return addDriverLicenseSuccess(state, action);\r\n        case actionTypes.UPDATE_DRIVER_SUCCESS:\r\n            return driverUpdateSuccess(state, action);\r\n        case actionTypes.REMOVE_USER_DATA_SUCCESS:\r\n            return removeUserDataSucces(state, action);\r\n        case actionTypes.UPDATE_ERROR_SUCCESS:\r\n            return updateError(state, action);\r\n        case actionTypes.UPDATE_USER_PASSWORD_SUCCESS:\r\n            return updateUserPasswordSuccess(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userDataReducer;\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from \"../utility\";\r\n\r\nconst initialState = {\r\n    vehicles: [],\r\n    error: null,\r\n    loading: false,\r\n}\r\n\r\nconst fetchDriverVehiclesStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n};\r\n\r\nconst fetchDriverVehiclesSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        vehicles: action.vehicles,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst fetchDriverVehiclesFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst deleteDriverVehicleSuccess = (state, action) => {\r\n    const updatedList = state.vehicles.filter(item => {\r\n        return item.id !== action.vehicleId\r\n    });\r\n    return updateObject(state, {\r\n        vehicles: updatedList,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n};\r\n\r\nconst addDriverVehicleSuccess = (state, action) => {\r\n    const updatedList = [...state.vehicles, action.vehicle]\r\n    return updateObject(state, {\r\n        vehicles: updatedList,\r\n        loading: false,\r\n        error: null\r\n    });\r\n};\r\n\r\nconst fetchVehicleSuccess = (state, action) => {\r\n    let updatedList = state.vehicles;\r\n    if (state.vehicles.length > 0) {\r\n        state.vehicles.forEach(item => {\r\n            if (item.id === action.vehicle.id) {\r\n                return updatedList;\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        updatedList = [...state.vehicles, action.vehicle];\r\n    }\r\n    return updateObject(state, {\r\n        vehicles: updatedList,\r\n        error: null,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst driverVehiclesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_DRIVER_VEHICLES_START:\r\n            return fetchDriverVehiclesStart(state, action);\r\n        case actionTypes.FETCH_DRIVER_VEHICLES_SUCCESS:\r\n            return fetchDriverVehiclesSuccess(state, action);\r\n        case actionTypes.FETCH_DRIVER_VEHICLES_FAIL:\r\n            return fetchDriverVehiclesFail(state, action);\r\n        case actionTypes.DELETE_DRIVER_VEHICLE_SUCCESS:\r\n            return deleteDriverVehicleSuccess(state, action);\r\n        case actionTypes.ADD_DRIVER_VEHICLE_SUCCESS:\r\n            return addDriverVehicleSuccess(state, action);\r\n        case actionTypes.FETCH_VEHICLE_SUCCESS:\r\n            return fetchVehicleSuccess(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default driverVehiclesReducer;\r\n","import {updateObject} from \"../utility\";\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    reservations: [],\r\n    reservation: null,\r\n    error: null,\r\n    loading: false,\r\n};\r\n\r\nconst fetchReservationsStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true,\r\n    });\r\n};\r\n\r\nconst fetchReservationsSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        reservations: action.driverReservations,\r\n        error: null,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst fetchReservationsFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst cancelReservationSuccess = (state, action) => {\r\n    const updatedList = state.reservations.map(item => {\r\n        if (item.id === action.reservation.id) {\r\n            return Object.assign({}, item, {state: action.reservation.state})\r\n        }\r\n        return item;\r\n    });\r\n    return updateObject(state, {\r\n        reservations: updatedList,\r\n        error: null,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst deleteReservationSuccess = (state, action) => {\r\n    const updatedList = state.reservations.filter(item => {\r\n        return item.id !== action.reservationId\r\n    });\r\n    return updateObject(state, {\r\n        reservations: updatedList,\r\n        error: null,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst addDriverReservationSuccese = (state, action) => {\r\n    return updateObject(state, {\r\n        reservation: action.reservation,\r\n        loading: false,\r\n        error: null,\r\n    });\r\n}\r\n\r\nconst updateError = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n    });\r\n}\r\n\r\nconst updateReservationPayment = (state, action) => {\r\n    return updateObject(state, {\r\n        loading: false,\r\n        error: null,\r\n        reservation: null,\r\n    });\r\n}\r\n\r\nconst reservationsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_RESERVATIONS_START:\r\n            return fetchReservationsStart(state, action);\r\n        case actionTypes.FETCH_RESERVATIONS_SUCCESS:\r\n            return fetchReservationsSuccess(state, action);\r\n        case actionTypes.FETCH_RESERVATIONS_FAIL:\r\n            return fetchReservationsFail(state, action);\r\n        case actionTypes.CANCEL_RESERVATION_SUCCESS:\r\n            return cancelReservationSuccess(state, action);\r\n        case actionTypes.DELETE_RESERVATION_SUCCESS:\r\n            return deleteReservationSuccess(state, action);\r\n        case actionTypes.ADD_DRIVER_RESERVATION_SUCCESS:\r\n            return addDriverReservationSuccese(state, action);\r\n        case actionTypes.UPDATE_ERROR_SUCCESS:\r\n            return updateError(state, action);\r\n        case actionTypes.UPDATE_RESERVATION_PAYMENT_SUCCESS:\r\n            return updateReservationPayment(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reservationsReducer;\r\n","import {updateObject} from \"../utility\";\r\nimport * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    parkingAreas: [],\r\n    selectedArea: {},\r\n    error: null,\r\n    loading: false,\r\n};\r\n\r\nconst fetchAreaStart = (state, action) => {\r\n    return updateObject(state, {\r\n        error: null,\r\n        loading: true,\r\n    });\r\n};\r\n\r\nconst fetchAreaSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        selectedArea: action.area,\r\n        error: null,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst fetchAllAreasSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        parkingAreas: action.parkingAreas,\r\n        error: null,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst fetchAreaFail = (state, action) => {\r\n    return updateObject(state, {\r\n        error: action.error,\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst closeAreaSelectionSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        selectedArea: {},\r\n    });\r\n};\r\n\r\nconst parkingAreaReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_AREA_START:\r\n            return fetchAreaStart(state, action);\r\n        case actionTypes.FETCH_AREA_SUCCESS:\r\n            return fetchAreaSuccess(state, action);\r\n        case actionTypes.FETCH_AREAS_SUCCESS:\r\n            return fetchAllAreasSuccess(state, action);\r\n        case actionTypes.FETCH_AREA_FAIL:\r\n            return fetchAreaFail(state, action);\r\n        case actionTypes.CLOSE_AREA_SELECTION:\r\n            return closeAreaSelectionSuccess(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default parkingAreaReducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from \"redux-thunk\";\nimport driverAuthReducer from \"./store/reducers/authReducer\";\nimport userDataReducer from \"./store/reducers/userDataReducer\";\nimport driverVehiclesReducer from \"./store/reducers/driverVehiclesReducer\";\nimport reservationReducer from \"./store/reducers/reservationReducer\";\nimport parkingAreaReducer from \"./store/reducers/parkingAreaReducer\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\n\nconst rootReducer = combineReducers({\n    driverAuth: driverAuthReducer,\n    driverData: userDataReducer,\n    driverVehicles: driverVehiclesReducer,\n    reservations: reservationReducer,\n    parkingArea: parkingAreaReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-container\":\"Navigation_nav-container__2HFX-\",\"nav-menu\":\"Navigation_nav-menu__3L0it\",\"nav-menu-items\":\"Navigation_nav-menu-items__1qfRY\",\"nav-text\":\"Navigation_nav-text__1-DGV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reservations\":\"Reservations_reservations__23APS\",\"reservations__filter\":\"Reservations_reservations__filter__1H1gS\",\"noReservation-card\":\"Reservations_noReservation-card__2Zp4P\",\"noReservation-actions\":\"Reservations_noReservation-actions__1csKI\",\"anonim-message\":\"Reservations_anonim-message__PDKZD\",\"reservations-reports\":\"Reservations_reservations-reports__3VNgP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reservation-form\":\"ReservationForm_reservation-form__wOz7_\",\"new-reservation__controls\":\"ReservationForm_new-reservation__controls__3p4BI\",\"new-reservation__actions\":\"ReservationForm_new-reservation__actions__3ptJU\",\"control\":\"ReservationForm_control__2Lzxg\",\"invalid\":\"ReservationForm_invalid__63XAs\",\"anonim-info\":\"ReservationForm_anonim-info__3LZCG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__21Cxo\",\"modal\":\"Modal_modal__2HNUm\",\"header\":\"Modal_header__VYUCj\",\"content\":\"Modal_content__QZgna\",\"actions\":\"Modal_actions__3td-x\",\"cancel\":\"Modal_cancel__2kCbK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"vehicles-container\":\"Vehicles_vehicles-container___B1vW\",\"noVehicle-card\":\"Vehicles_noVehicle-card__3bHbM\",\"anonim-message\":\"Vehicles_anonim-message__32lvu\",\"vehicle-card\":\"Vehicles_vehicle-card__2kF2y\",\"vehicle-card__text\":\"Vehicles_vehicle-card__text__AXKq4\",\"vehicles-actions\":\"Vehicles_vehicles-actions__3FxUz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"Register_register__3nImp\",\"register-header\":\"Register_register-header__vVy9E\",\"register__actions\":\"Register_register__actions__da13I\",\"go-back\":\"Register_go-back__31PsX\",\"user-password\":\"Register_user-password__2dHG5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"username\":\"DriverProfile_username__32xha\",\"user-password\":\"DriverProfile_user-password__1DbFw\",\"user-vehicles\":\"DriverProfile_user-vehicles__3oo90\",\"user-reservations\":\"DriverProfile_user-reservations__2t_kB\",\"user-logout\":\"DriverProfile_user-logout__10WeW\",\"user-license__action\":\"DriverProfile_user-license__action__WjIyH\",\"user-license\":\"DriverProfile_user-license__3B8-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user-card\":\"WrapperCard_user-card__1X2Pd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"payment\":\"ReservationPayment_payment__2w1cP\",\"payment-details\":\"ReservationPayment_payment-details__1NiUZ\",\"payment-actions\":\"ReservationPayment_payment-actions__2aj-k\",\"reservation-details\":\"ReservationPayment_reservation-details__2AznF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reservation\":\"Reservation_reservation__1g19Y\",\"reservation__info\":\"Reservation_reservation__info__20VHq\",\"reservation__info-collapse\":\"Reservation_reservation__info-collapse__2K05t\",\"reservation__actions\":\"Reservation_reservation__actions__1hZeq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1XXok\",\"login-header\":\"Login_login-header__22my6\",\"login-footer\":\"Login_login-footer__jMqAA\",\"user-password\":\"Login_user-password__OVDok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"license\":\"DrivingLicense_license__2Pc6_\",\"license__body\":\"DrivingLicense_license__body__19BpQ\",\"license__valability\":\"DrivingLicense_license__valability__1om1s\",\"license-add_actions\":\"DrivingLicense_license-add_actions__3FPit\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"admin-area\":\"AdminProfile_admin-area__1xtWz\",\"admin-area__note\":\"AdminProfile_admin-area__note__3j5gk\",\"area-reservations\":\"AdminProfile_area-reservations__25Rx4\",\"admin-area-info\":\"AdminProfile_admin-area-info__YLG82\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-container\":\"SearchContainer_search-container__1LFVI\",\"search-result\":\"SearchContainer_search-result__1ivMQ\",\"search-container__fallback\":\"SearchContainer_search-container__fallback__1_d7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reports-filter\":\"ReportsFilter_reports-filter__e3mxZ\",\"reports-filter__control\":\"ReportsFilter_reports-filter__control__2kPK0\",\"reportsFilter__actions\":\"ReportsFilter_reportsFilter__actions__3NeEQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modify-profile__controls\":\"EditProfile_modify-profile__controls__3ugWF\",\"edit-profile__actions\":\"EditProfile_edit-profile__actions__3Vz0i\",\"modify-profile__actions\":\"EditProfile_modify-profile__actions__3dZz6\",\"user-license\":\"EditProfile_user-license__2g4iD\",\"user-password\":\"EditProfile_user-password__1xBdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"areas\":\"ParkingAreas_areas__2JjFm\",\"control\":\"ParkingAreas_control__Mvr0o\",\"area-search\":\"ParkingAreas_area-search__2lN3n\",\"area-info\":\"ParkingAreas_area-info__3bt7s\"};"],"sourceRoot":""}